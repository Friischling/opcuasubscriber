<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpcLabs.EasyOpcUA</name>
    </assembly>
    <members>
        <member name="T:OpcLabs.EasyOpc.UA.UAMonitoringParameters">
            <summary>
            Contains monitoring parameters (such as the sampling interval, and optional 
            data change filter).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoringParameters.#ctor">
            <overloads>
            Initializes a new instance of the class.
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoringParameters.#ctor(System.Int32)">
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoringParameters.#ctor(System.Int32,OpcLabs.EasyOpc.UA.UADataChangeFilter)">
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <param name="dataChangeFilter">Defines the conditions under which a data change notification should be reported.
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoringParameters.#ctor(System.Int32,OpcLabs.EasyOpc.UA.UADataChangeFilter,System.Int32)">
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <param name="dataChangeFilter">Defines the conditions under which a data change notification should be reported.
            </param>
            <param name="queueSize">The requested size of the MonitoredItem queue.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoringParameters.#ctor(OpcLabs.EasyOpc.UA.UAMonitoringParameters)">
            <param name="monitoringParameters">Contains monitoring parameters (such as the sampling interval, and optional 
            data change filter).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoringParameters.op_Equality(OpcLabs.EasyOpc.UA.UAMonitoringParameters,OpcLabs.EasyOpc.UA.UAMonitoringParameters)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="monitoringParameters1">First object to be compared.</param>
            <param name="monitoringParameters2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoringParameters.op_Inequality(OpcLabs.EasyOpc.UA.UAMonitoringParameters,OpcLabs.EasyOpc.UA.UAMonitoringParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="monitoringParameters1">First object to be compared.</param>
            <param name="monitoringParameters2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoringParameters.op_Implicit(System.Int32)~OpcLabs.EasyOpc.UA.UAMonitoringParameters">
            <summary>
            Converts a sampling interval to monitoring parameters object.
            </summary>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <returns>Returns the monitoring parameters object with the specified sampling interval.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoringParameters.FromInt32(System.Int32)">
            <summary>
            Converts a sampling interval to monitoring parameters object.
            </summary>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <returns>Returns the monitoring parameters object with the specified sampling interval.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoringParameters.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current object.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoringParameters.Equals(OpcLabs.EasyOpc.UA.UAMonitoringParameters)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.UA.UAMonitoringParameters"/> are equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.UA.UAMonitoringParameters"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAMonitoringParameters.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAMonitoringParameters.DataChangeFilter">
            <summary>
            Optional data change filter. Defines the conditions under which a data change notification should be reported.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAMonitoringParameters.QueueSize">
            <summary>
            The requested size of the MonitoredItem queue.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAMonitoringParameters.SamplingInterval">
            <summary>
            The fastest rate at which the monitored items should be accessed and evaluated (in milliseconds).
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UADataChangeTrigger">
            <summary>
            Specifies the conditions under which a data change notification should be reported.
            </summary>
            <remarks>
            If the <see cref="T:OpcLabs.EasyOpc.UA.UADataChangeFilter"/> is not applied to the monitored item, <see cref="F:OpcLabs.EasyOpc.UA.UADataChangeTrigger.StatusValue"/> is the default 
            reporting behaviour.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UADataChangeTrigger.Status">
            <summary>
            Report a notification ONLY if the StatusCode associated with the value changes.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UADataChangeTrigger.StatusValue">
            <summary>
            Report a notification if either the StatusCode or the value change. The Deadband filter can be used in addition for
            filtering value changes.
            </summary>
            <remarks>
            This is the default setting if no filter is set.
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UADataChangeTrigger.StatusValueTimestamp">
            <summary>
            Report a notification if either StatusCode, value or the SourceTimestamp change. The Deadband filter can be used in
            addition for filtering value changes.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.EasyUAEngineParameters">
            <summary>
            Contains values for determining certain OPC-UA parameters heuristically.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UASmartEngineParameters">
            <summary>
            Contains heuristics such as how often are unused objects cleaned up, or how long are connections to session kept open.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAClientEngineParameters">
            <summary>
            Contains parameters that influence the behavior of the component on the application, discovery and 
            connection levels.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAClientEngineParameters.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAClientEngineParameters.#ctor(OpcLabs.EasyOpc.UA.UAClientEngineParameters)">
            <param name="clientEngineParameters">Parameters object to be copied from.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientEngineParameters.AllowCertificatePrompt">
            <summary>
            Determines whether the component can interact with the user when checking or creating an application instance
            certificate.
            </summary>
            <value>If set to <c>false</c> (the default), no dialogs will be displayed.</value>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientEngineParameters.ApplicationCertificateStore">
            <summary>
            The store containing application instance certificate (or where the application instance certificate will be 
            created).
            </summary>
            <value>For directory certificate store, this is a directory name. For Windows certificate store, this is a 
            <c>"LocalMachine\"</c> followed by a store location.</value>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientEngineParameters.CertificateAcceptancePolicy">
            <summary>
            Determines which server certificates are accepted.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientEngineParameters.ConfigurationSource">
            <summary>
            Determines the source of the UA configuration.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientEngineParameters.DiscoveryHost">
            <summary>
            The name of the machine that runs the discovery server that will be used for discovery tasks.
            </summary>
            <remarks>
            Setting this property replaces the <see cref="P:OpcLabs.EasyOpc.UA.UAClientEngineParameters.DiscoveryUriStrings"/> with set of standard URLs for all well-known
            discovery points.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientEngineParameters.DiscoveryUriStrings">
            <summary>
            The URLs of discovery endpoints that will be used for discovery tasks.
            </summary>
            <remarks>
            <para>
            A generic string is used instead of <see cref="T:System.Uri"/>, because in some cases, the value may not represent
            a real URI.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientEngineParameters.DiscoveryTimeout">
            <summary>
            A maximum time a server discovery can take (in milliseconds).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientEngineParameters.RetrialDelay">
            <summary>
            A delay before the component will try to re-initialize itself if a serious failure occurs during startup
            (in milliseconds).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientEngineParameters.ReconnectionPeriod">
            <summary>
            How often the component checks and processes the list of objects that may need reconnection. In milliseconds.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientEngineParameters.TrustedPeersCertificateStore">
            <summary>
            The store containing any trusted peer certificates.
            </summary>
            <value>For directory certificate store, this is a directory name. For Windows certificate store, this is a 
            <c>"LocalMachine\"</c> followed by a store location.</value>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UASmartEngineParameters.GarbageCollectionPeriod">
            <summary>
            How often the component cleans up unused objects such as sessions and subscriptions. In milliseconds.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UASmartEngineParameters.SessionHoldPeriod">
            <summary>
            After a session object is released, it will be maintained at least for the time period specified here.
            In milliseconds.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAEngineParameters.AutomaticPublishingFactor">
            <summary>
            Automatic publishing factor that the component uses to determine the publishing interval.
            </summary>
            <remarks>
            If you do not specify the publishing interval (if it is set to zero in <see cref="T:OpcLabs.EasyOpc.UA.UASubscriptionParameters"/>), the
            component will calculate it by dividing the sampling interval by this factor, and multiplying by the queue size.
            The resulting value is limited by <see cref="P:OpcLabs.EasyOpc.UA.EasyUAEngineParameters.FastestAutomaticPublishingInterval"/>.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAEngineParameters.FastestAutomaticPublishingInterval">
            <summary>
            Fastest publishing interval that the component will use when calculating it.
            </summary>
            <remarks>
            If the component is determining the publishing interval automatically, it will not make it faster than this value.
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.EasyUAClient">
            <summary>
            The EasyUAClient object is the main object that allows simple access to OPC Unified Architecture servers.
            </summary>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.ReadValue.Overload1.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.ReadValue.Overload1.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.SubscribeMonitoredItem.Overload1.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.SubscribeMonitoredItem.Overload1.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Required for Windows.Forms Class Composition Designer support
            </summary>
            <param name="container">The component container to which the new instance will be added.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Install">
            <summary>
            Creates an application instance certificate if it does not exist.
            </summary>
            <remarks>You can explicitly call this method as part of installation procedure, with administrative rights
            so that the necessary operations can be performed.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.RetryAll">
            <summary>
            Forces a retrial on all objects that are in a failure state.
            </summary>
            <remarks>
            <para>
            Individual monitored items, subscriptions, sessions, and the overall controlling engine can be put into a failure 
            when an error occurs while connecting to them, or a serious error renders them unusable later. In such case,
            the component will automaticaly retry to connect these objects again, after a configurable delay. </para>
            <para>
            This method terminates the waiting delay, and causes all such objects to be retried on next opportunity.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Uninstall">
            <summary>
            Reverts the changes made by <see cref="M:OpcLabs.EasyOpc.UA.EasyUAClient.Install"/> method.
            </summary>
            <remarks>The current implemenatation does nothing.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseDataNodes(OpcLabs.EasyOpc.UA.UAEndpointDescriptor)">
             <overloads>
             <summary>
             Browses the data nodes in OPC server's address space. Starts from the specified node (or Objects folder), and 
             returns information about child nodes found.
             </summary>
             </overloads>
            
             <summary>
             Browses the data nodes, specifying and endpoint descriptor, and starting from the Objects folder.
             </summary>
             <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
             <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
             <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
             <example>
             <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.BrowseDataNodes.Overload1.cs" lang="CSharp" region="Example"/>
             <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.BrowseDataNodes.Overload1.vb" lang="VBNET" region="Example"/>
             </example>
             <remarks>
             <para>
             This overload starts the browsing from the Objects folder.</para>
             <para>
             Data nodes are Objects, Variables, and Properties.</para>
             </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseDataNodes(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId)">
            <summary>
            Browses the data nodes, specifying and endpoint descriptor, and a starting Node Id.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id.</param>
            <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
            <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
            <remarks>
            <para>
            Data nodes are Objects, Variables, and Properties.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseNodes(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UABrowseParameters)">
            <summary>
            Browses the nodes in OPC server's address space. Starts from the specified node, and 
            returns information about child nodes found.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="browseParameters">Specifies which nodes will be returned.</param>
            <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
            <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.BrowseNodes.Main.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.BrowseNodes.Main.vb" lang="VBNET" region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseObjects(OpcLabs.EasyOpc.UA.UAEndpointDescriptor)">
             <overloads>
             <summary>
             Browses the Objects in OPC server's address space. Starts from the specified node (or Objects folder), and 
             returns information about child nodes found.
             </summary>
             </overloads>
            
             <summary>
             Browses the Objects, specifying and endpoint descriptor, and starting from the Objects folder.
             </summary>
             <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
             <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
             <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
             <remarks>
             <para>
             This overload starts the browsing from the Objects folder.</para>
             </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseObjects(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId)">
            <summary>
            Browses the Objects, specifying and endpoint descriptor, and a starting Node Id.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
            <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.BrowseObjects.Overload2.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.BrowseObjects.Overload2.vb" lang="VBNET" region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseProperties(OpcLabs.EasyOpc.UA.UAEndpointDescriptor)">
             <overloads>
             <summary>
             Browses the Properties in OPC server's address space. Starts from the specified node (or Objects folder), and 
             returns information about child nodes found.
             </summary>
             </overloads>
            
             <summary>
             Browses the Properties, specifying and endpoint descriptor, and starting from the Objects folder.
             </summary>
             <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
             <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
             <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
             <remarks>
             <para>
             This overload starts the browsing from the Objects folder.</para>
             </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseProperties(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId)">
            <summary>
            Browses the Properties, specifying and endpoint descriptor, and starting from the Objects folder.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
            <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.BrowseProperties.Overload2.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.BrowseProperties.Overload2.vb" lang="VBNET" region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseVariables(OpcLabs.EasyOpc.UA.UAEndpointDescriptor)">
             <overloads>
             <summary>
             Browses the Variables in OPC server's address space. Starts from the specified node (or Objects folder), and 
             returns information about child nodes found.
             </summary>
             </overloads>
            
             <summary>
             Browses the Variables, specifying and endpoint descriptor, and starting from the Objects folder.
             </summary>
             <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
             <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
             <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
             <remarks>
             <para>
             This overload starts the browsing from the Objects folder.</para>
             </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.BrowseVariables(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId)">
            <summary>
            Browses the Variables, specifying and endpoint descriptor, and starting from the Objects folder.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <returns>The method returns a node element collection, which is keyed by the node browse name, and contains
            <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> values. Each element contains information about a particular node found.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.BrowseVariables.Overload2.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.BrowseVariables.Overload2.vb" lang="VBNET" region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ChangeMonitoredItemSubscription(System.Int32,System.Int32)">
            <overloads>
            Changes parameters of a subscription to a particular monitored item.
            <remarks>
            <para>It is more efficient to change multiple subscriptions using 
            <c>MultipleMonitoredItemSubscriptions</c> method.</para>
            </remarks>
            </overloads>
            
            <summary>
            Changes parameters of a subscription. Specify the handle, and a new sampling interval.
            </summary>
            <param name="handle">Monitored item subscription handle as returned by the subscription method.</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.ChangeMonitoredItemSubscription.Overload1.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.ChangeMonitoredItemSubscription.Overload1.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ChangeMonitoredItemSubscription(System.Int32,System.Int32,System.Double)">
            <summary>
            Changes parameters of a subscription. Specify the handle, a new sampling interval and absolute deadband value.
            </summary>
            <param name="handle">Monitored item subscription handle as returned by the subscription method.</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <param name="absoluteDeadbandValue">The value of absolute deadband.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ChangeMonitoredItemSubscription(System.Int32,OpcLabs.EasyOpc.UA.UAMonitoringParameters)">
            <summary>
            Changes parameters of a subscription. Specify the handle, and a new monitoring parameters object.
            </summary>
            <param name="handle">Monitored item subscription handle as returned by the subscription method.</param>
            <param name="monitoringParameters">Contains monitoring parameters (such as the sampling interval, and optional 
            data change filter).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ChangeMonitoredItemSubscription(OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments)">
            <summary>
            Changes parameters of a subscription, specifying an object containing all necessary arguments.
            </summary>
            <param name="subscriptionChangeArguments">Arguments specifying which subscription to change and how.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ChangeMultipleMonitoredItemSubscriptions(OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments[])">
            <overloads>
            <summary>
            Changes parameters of subscriptions to multiple monitored items.
            </summary>
            </overloads>
            
            <summary>
            Changes parameters of multiple subscriptions, specifying objects containing all necessary 
            arguments.
            </summary>
            <param name="subscriptionChangeArgumentsArray">Array of arguments, one element per each monitored item involved in 
            the operation.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ChangeMultipleMonitoredItemSubscriptions(System.Int32[],System.Int32)">
            <summary>
            Changes parameters of multiple subscriptions. Specify the handles, and a new sampling interval.
            </summary>
            <param name="handleArray">Array of subscription handles</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.ChangeMultipleMonitoredItemSubscriptions.Overload2.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.ChangeMultipleMonitoredItemSubscriptions.Overload2.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ChangeMultipleMonitoredItemSubscriptions(System.Int32[],System.Int32,System.Double)">
            <summary>
            Changes parameters of multiple subscriptions. Specify the handles, a new sampling interval and absolute deadband 
            value.
            </summary>
            <param name="handleArray">Array of subscription handles</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <param name="absoluteDeadbandValue">The value of absolute deadband.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ChangeMultipleMonitoredItemSubscriptions(System.Int32[],OpcLabs.EasyOpc.UA.UAMonitoringParameters)">
            <summary>
            Changes parameters of multiple subscriptions. Specify the handles, and a new monitoring parameters object.
            </summary>
            <param name="handleArray">Array of subscription handles</param>
            <param name="monitoringParameters">Contains monitoring parameters (such as the sampling interval, and optional 
            data change filter).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.DiscoverServers">
            <summary>
            Discovers available OPC-UA servers and returns information about them.
            </summary>
            <returns>Returns a collection of application elements (servers, <see cref="T:OpcLabs.EasyOpc.UA.UAApplicationElement"/>), keyed by their 
            discovery URLs (<see cref="P:OpcLabs.EasyOpc.UA.UAApplicationElement.DiscoveryUriString"/>).</returns>
            <remarks>
            <para>This method uses the so-called Local Discovery Server (LDS). You can influence how the discovery works
            using the properties in <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.EngineParameters"/>. The name of the machine that runs the discovery 
            is determined by <see cref="P:OpcLabs.EasyOpc.UA.UAClientEngineParameters.DiscoveryHost"/>, and defaults to "localhost".</para>
            <para>Invokes the FindServers service.
            </para>
            </remarks>
            <example>
            <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.DiscoverServers.Main.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.DiscoverServers.Main.vb" lang="VBNET" region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.GetMonitoredItemArguments(System.Int32)">
            <summary>
            Obtains parameters of certain monitored item subscription.
            </summary>
            <param name="handle">Monitored item subscription handle as returned by the subscription method.</param>
            <returns>Returns an object that holds all information pertaining to the monitored item subscription: 
            attribute information, subscription parameters, and monitoring parameters.</returns>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.GetMonitoredItemArguments.Main.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.GetMonitoredItemArguments.Main.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.GetMonitoredItemArgumentsDictionary">
            <summary>
            Obtains informatiom about all monitored item subscriptions on this <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.
            </summary>
            <returns>Returns a dictionary of monitored item argument objects. The dictionary is keyed by the monitored item
            subscription handles, and its values contain information describing each subscription.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.GetMonitoredItemArgumentsDictionary.Main.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.GetMonitoredItemArgumentsDictionary.Main.vb" lang="VBNET" region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Read(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId)">
             <overloads>
             <summary>
             Reads attribute data from an OPC server. Value, status code, and timestamps are returned. 
             </summary>
             </overloads>
            
             <summary>
             Reads data of a node's Value attribute, using an endpoint descriptor and a node Id. 
             </summary>
             <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
             <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
             <returns>Returns an attribute data object that stores the value of an attribute, together with status code and 
             timestamps.</returns>
             <example>
             <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.Read.Overload1.cs" lang="CSharp" region="Example"/>
             <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.Read.Overload1.vb" lang="VBNET" region="Example"/>
             </example>
             <remarks>
             <para>
             You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
             <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
             </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Read(OpcLabs.EasyOpc.UA.UANodeArguments)">
            <summary>
            Reads a Value attribute of a node, using an object that holds the node information. 
            </summary>
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <returns>Returns an attribute data object that stores the value of an attribute, together with status code and 
            timestamps.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Read(OpcLabs.EasyOpc.UA.UANodeArguments,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <summary>
            Reads a specified attribute of a node, using an object that holds the node information, and an attribute Id. 
            </summary>
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <returns>Returns an attribute data object that stores the value of an attribute, together with status code and 
            timestamps.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Read(OpcLabs.EasyOpc.UA.UAReadArguments)">
            <summary>
            Reads attribute data using an object that holds all necessary arguments. 
            </summary>
            <param name="readArguments">Arguments specifying what to read from an OPC-UA server.</param>
            <returns>Returns an attribute data object that stores the value of an attribute, together with status code and 
            timestamps.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ReadMultiple(OpcLabs.EasyOpc.UA.UAReadArguments[])">
            <summary>
            Reads multiple attributes, using array of argument objects as an input. 
            </summary>
            <param name="readArgumentsArray">Array of argument objects specifying what to read from an OPC-UA server.</param>
            <returns>Returns an array of attribute data objects. Each object stores the value of an attribute, together with 
            status code and timestamps. The indices of elements in the output array are the same as those in the input array, 
            <paramref name="readArgumentsArray"/>.</returns>
            <remarks>
            The size of the input array will become the size of the output array. The element positions (indices) in the output 
            array are the same as in the input array. 
            </remarks>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.ReadMultiple.Main.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.ReadMultiple.Main.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ReadValue(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId)">
            <overloads>
            <summary>
            Reads an attribute from an OPC server. Only the attribute's value is returned (status code and timestamps are not 
            returned). 
            </summary>
            <remarks>The status code must be 'good' for this method to succeed; otherwise, an <see cref="T:OpcLabs.EasyOpc.UA.OpcException"/>
            is thrown.</remarks>
            </overloads>
            
            <summary>
            Reads an attribute's value using an endpoint descriptor and a node Id. 
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <returns>If successful, the method returns the actual value of OPC attribute requested.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.ReadValue.Overload1.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.ReadValue.Overload1.vb" lang="VBNET" region="Example"/>
            </example>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ReadValue(OpcLabs.EasyOpc.UA.UANodeArguments)">
            <summary>
            Reads a value of Value attribute of a node, using an object that holds the node information. 
            </summary>
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <returns>If successful, the method returns the actual value of OPC attribute requested.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ReadValue(OpcLabs.EasyOpc.UA.UANodeArguments,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <summary>
            Reads a value of a specified attribute of a node, using an object that holds the node information, and an
            attribute Id. 
            </summary>
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <returns>If successful, the method returns the actual value of OPC attribute requested.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ReadValue(OpcLabs.EasyOpc.UA.UAReadArguments)">
            <summary>
            Reads an attribute' value using an object that holds all necessary arguments. 
            </summary>
            <param name="readArguments">Arguments specifying what to read from an OPC-UA server.</param>
            <returns>If successful, the method returns the actual value of OPC attribute requested.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.ReadMultipleValues(OpcLabs.EasyOpc.UA.UAReadArguments[])">
            <summary>
            Reads values of multiple attributes, using array of argument objects as an input. 
            </summary>
            <param name="readArgumentsArray">Array of argument objects specifying what to read from an OPC-UA server.</param>
            <returns>Returns an array of value objects. Each object contains the actual value of an attribute. The indices of 
            elements in the output array are the same as those in the input array, 
            <paramref name="readArgumentsArray"/>.</returns>
            <remarks>
            <para>The status codes of attributes should be 'good'; otherwise, a <see cref="P:OpcLabs.EasyOpc.UA.ValueResult.Value"/> of that
            attribute is not valid, and <see cref="P:OpcLabs.EasyOpc.UA.OperationResult.Exception"/> contains a non-null exception.</para>
            <para>
            The size of the input array will become the size of the output array. The element positions (indices) in the output 
            array are the same as in the input array.</para> 
            </remarks>
            <example>
            <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.ReadMultipleValues.Main.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.ReadMultipleValues.Main.vb" lang="VBNET" region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMonitoredItem(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,System.Int32)">
             <overloads>
             <summary>
             Subscribe to changes of a particular monitored item. For each significant monitored item change, either the 
             <see cref="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged"/> event is generated, or a specified callback method is invoked.
             </summary>
             <remarks>
             <para>It is more efficient to subscribe to multiple monitored items using 
             <see cref="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMultipleMonitoredItems(OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments[])"/> method.</para>
             </remarks>
             </overloads>
            
             <summary>
             Subscribe to a monitored item. Specify an endpoint descriptor, node id, and sampling interval.
             </summary>
             <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
             <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
             <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
             Server should sample its underlying source for data changes.</param>
             <returns>The method returns an integer handle that uniquely identifies the monitored item subscription.</returns>
             <example>
             <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.SubscribeMonitoredItem.Overload1.cs" lang="CSharp" region="Example"/>
             <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.SubscribeMonitoredItem.Overload1.vb" lang="VBNET" region="Example"/>
             </example>
             <remarks>
             <para>
             You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
             <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
             </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMonitoredItem(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,System.Int32,System.EventHandler{OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs})">
            <summary>
            Subscribe to a monitored item. Specify an endpoint descriptor, node id, sampling interval, and a callback method.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <param name="callback">A callback method to be invoked for each significant monitored item change.</param>
            <returns>The method returns an integer handle that uniquely identifies the monitored item subscription.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.SubscribeMonitoredItem.CallbackLambda.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.SubscribeMonitoredItem.CallbackLambda.vb" lang="VBNET" region="Example"/>
            </example>
            <remarks>
            <para>
            If <paramref name="callback"/> is a null reference, only the <see cref="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged"/> event is 
            generated, and no callback method is invoked.</para>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMonitoredItem(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,System.Int32,System.EventHandler{OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs},System.Object)">
            <summary>
            Subscribe to a monitored item. Specify an endpoint descriptor, node id, sampling interval, callback method, and 
            a state object.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <param name="callback">A callback method to be invoked for each significant monitored item change.</param>
            <param name="state">User-defined state object.</param>
            <returns>The method returns an integer handle that uniquely identifies the monitored item subscription.</returns>
            <remarks>If <paramref name="callback"/> is a null reference, only the <see cref="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged"/> event is 
            generated, and no callback method is invoked.</remarks>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMonitoredItem(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,System.Int32,System.Object)">
            <summary>
            Subscribe to a monitored item. Specify an endpoint descriptor, node id, sampling interval, and a state object.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <param name="state">User-defined state object.</param>
            <returns>The method returns an integer handle that uniquely identifies the monitored item subscription.</returns>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMonitoredItem(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,System.Int32,System.Double)">
            <summary>
            Subscribe to a monitored item. Specify an endpoint descriptor, node id, sampling interval, and absolute deadband
            value.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <param name="absoluteDeadbandValue">The value of absolute deadband.</param>
            <returns>The method returns an integer handle that uniquely identifies the monitored item subscription.</returns>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMonitoredItem(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,System.Int32,System.Double,System.EventHandler{OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs},System.Object)">
            <summary>
            Subscribe to a monitored item. Specify an endpoint descriptor, node id, sampling interval, absolute deadband
            value, callback method, and a state object.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <param name="absoluteDeadbandValue">The value of absolute deadband.</param>
            <param name="callback">A callback method to be invoked for each significant monitored item change.</param>
            <param name="state">User-defined state object.</param>
            <returns>The method returns an integer handle that uniquely identifies the monitored item subscription.</returns>
            <remarks>
            <para>
            If <paramref name="callback"/> is a null reference, only the <see cref="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged"/> event is 
            generated, and no callback method is invoked.</para>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMonitoredItem(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,System.Int32,System.Double,System.Object)">
            <summary>
            Subscribe to a monitored item. Specify an endpoint descriptor, node id, sampling interval, absolute deadband
            value, and a state object.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <param name="absoluteDeadbandValue">The value of absolute deadband.</param>
            <param name="state">User-defined state object.</param>
            <returns>The method returns an integer handle that uniquely identifies the monitored item subscription.</returns>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMonitoredItem(OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments)">
            <summary>
            Subscribe to a monitored item, specifying an object that holds all necessary arguments.
            </summary>
            <param name="monitoredItemArguments">Array of arguments, one element per each monitored item involved in the 
            operation.</param>
            <returns>The method returns an integer handle that uniquely identifies the monitored item subscription.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.SubscribeMultipleMonitoredItems(OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments[])">
            <summary>
            Subscribe to changes of multiple monitored items. The <see cref="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged"/> event is generated for each 
            significant monitored item change.
            </summary>
            <param name="monitorArgumentsArray">Array of argument objects specifying what and how to subscribe.</param>
            <returns>The function returns an array of integer handle. Each handle uniquely identifies the monitored item 
            subscription. The indices of elements in the output array are the same as those in the input array, 
            <paramref name="monitorArgumentsArray"/>.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.SubscribeMultipleMonitoredItems.Overload1.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.SubscribeMultipleMonitoredItems.Overload1.vb" lang="VBNET" region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.UnsubscribeMonitoredItem(System.Int32)">
             <overloads>
             Unsubscribe from changes of a particular monitored item.  
             </overloads>
             <remarks>
             <para>It is more efficient to unsubscribe from multiple items using <see cref="M:OpcLabs.EasyOpc.UA.EasyUAClient.UnsubscribeMultipleMonitoredItems(System.Int32[])"/> 
             method.
             </para>
             <para>The monitored item subscription handle becomes invalid after this method is called.</para>
             </remarks>
            
             <summary>Unsubscribe from monitored item, specifying its handle.
             </summary>
             <param name="handle">Monitored item subscription handle as returned by the subscription method</param>
             <example>
             <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.UnsubscribeMonitoredItem.Main.cs" lang="CSharp" region="Example"/>
             <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.UnsubscribeMonitoredItem.Main.vb" lang="VBNET" region="Example"/>
             </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.UnsubscribeMultipleMonitoredItems(System.Int32[])">
            <summary>Unsubscribe from changes of multiple monitored items, specifying array of integer handles.
            </summary>
            <param name="handleArray">Array of subscription handles</param>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.UnsubscribeMultipleMonitoredItems.Main.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.UnsubscribeMultipleMonitoredItems.Main.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.UnsubscribeAllMonitoredItems">
            <summary>
            Unsubscribe from changes to all monitored items.  
            </summary>
            <example>
            <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.UnsubscribeAllMonitoredItems.Main.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.UnsubscribeAllMonitoredItems.Main.vb" lang="VBNET" region="Example"/>
            </example>
            <remarks>
            All monitored item subscriptions on this <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object are unsubscribed. Their corresponding 
            handles become invalid after this method is called.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Write(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UAAttributeData)">
             <overloads>
             <summary>
             Writes into an attribute in an OPC server. Value, status code and timestamps are written. 
             </summary>
             </overloads>
            
             <summary>
             Writes data into a Value attribute of a node, using an endpoint descriptor and a node Id.
             </summary>
             <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
             <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
             <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
             <example>
             <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.Write.Overload1.cs" lang="CSharp" region="Example"/>
             <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.Write.Overload1.vb" lang="VBNET" region="Example"/>
             </example>
             <remarks>
             <para>
             You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
             <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
             </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Write(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UAAttributeData,System.TypeCode)">
            <summary>
            Writes data into a Value attribute of a node, using an endpoint descriptor, node Id, and a type code.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <param name="typeCode">Specifies the type that should be used when writing the value.</param>
            <remarks>
            <para>
            The method will attempt to convert the value to the type specified by <paramref name="typeCode"/> before
            writing. This may be needed because the OPC server will only accept values of proper type.</para>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Write(OpcLabs.EasyOpc.UA.UAWriteArguments)">
            <summary>
            Write data into a specified attribute, using an object that holds all necessary arguments. 
            </summary>
            <param name="writeArguments">Arguments specifying what to write to an OPC-UA server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.WriteValue(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,System.Object)">
             <overloads>
             <summary>
             Writes a value into an attribute an OPC server. Only the item value is written (satus code and timestamps are not 
             written).
             </summary>
             </overloads>
            
             <summary>
             Writes value into a Value attribute of a node, using an endpoint descriptor and a node Id.
             </summary>
             <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
             <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
             <param name="value">The value to be written.</param>
             <example>
             <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.WriteValue.Overload1.cs" lang="CSharp" region="Example"/>
             <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.WriteValue.Overload1.vb" lang="VBNET" region="Example"/>
             </example>
             <remarks>
             <para>
             You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
             <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
             </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.WriteValue(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,System.Object,System.TypeCode)">
            <summary>
            Writes value into a Value attribute of a node, using an endpoint descriptor, node Id, and a type code.
            </summary>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="value">The value to be written.</param>
            <param name="typeCode">Specifies the type that should be used when writing the value.</param>
            <remarks>
            <para>
            The method will attempt to convert the value to the type specified by <paramref name="typeCode"/> before
            writing. This may be needed because the OPC server will only accept values of proper type.</para>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.WriteValue(OpcLabs.EasyOpc.UA.UAWriteValueArguments)">
            <summary>
            Writes a value into a Value attribute of a node, using an endpoint descriptor and a node Id.
            </summary>
            <param name="writeValueArguments">Arguments specifying what to write to an OPC-UA server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.WriteMultiple(OpcLabs.EasyOpc.UA.UAWriteArguments[])">
            <summary>
            Writes data into multiple attributes, using array of argument objects as an input. 
            </summary>
            <param name="writeArgumentsArray">Array of argument objects specifying what to write from an OPC-UA server.</param>
            <returns>The method returns an array of <see cref="T:OpcLabs.EasyOpc.UA.OperationResult"/> objects. The indices of elements
            in the output array are the same as those in the input arrays.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.WriteMultiple.TestSuccess.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.WriteMultiple.TestSuccess.vb" lang="VBNET" region="Example"/>
            </example>
            <remarks>
            <para>The size of the input array will become the size of the output array. The element positions (indices) in the 
            output array are the same as in the input array. </para>
            <para>This method does not throw an exception in case of OPC operation failures. Instead, the eventual exception
            related to each item is returned in Exception property of each returned <see cref="T:OpcLabs.EasyOpc.UA.OperationResult"/> element.
            </para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.WriteMultipleValues(OpcLabs.EasyOpc.UA.UAWriteValueArguments[])">
            <summary>
            Writes values into multiple attributes, using array of argument objects as an input (status codes and timestamps
            are not written).
            </summary>
            <param name="writeValueArgumentsArray">Array of argument objects specifying what to write from an OPC-UA server.
            </param>
            <returns>The method returns an array of <see cref="T:OpcLabs.EasyOpc.UA.OperationResult"/> objects. The indices of elements
            in the output array are the same as those in the input arrays.</returns>
            <example>
            <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.WriteMultipleValues.Main.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.WriteMultipleValues.Main.vb" lang="VBNET" region="Example"/>
            </example>
            <example>
            <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.WriteMultipleValues.TestSuccess.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.WriteMultipleValues.TestSuccess.vb" lang="VBNET" region="Example"/>
            </example>
            <remarks>
            <para>The size of the input array will become the size of the output array. The element positions (indices) in the 
            output array are the same as in the input array. </para>
            <para>This method does not throw an exception in case of OPC operation failures. Instead, the eventual exception
            related to each item is returned in Exception property of each returned <see cref="T:OpcLabs.EasyOpc.UA.OperationResult"/> element.
            </para>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.EasyUAClient.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClient.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.EngineParameters">
            <summary>
            Contains parameters that are perpetually shared among all instances of the <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.DefaultInstance">
            <summary>
            A default, shared instance of the client object.
            </summary>
            <remarks>
            <para>
            Use this property with care, as its usability is limited. Its main use is for testing, and for non-library
            application code where just a single instance is sufficient.</para>
            <para>
            The default instance is not suitable for Windows Forms or similar environments, where a specific 
            <see cref="P:OpcLabs.EasyOpc.UA.EasyUAClient.SynchronizationContext"/> may be used with each form.</para>
            <para>
            We also do not recommend using the default instance for library code, due to conflicts that may arise if your 
            library sets some instance parameters which may not be the same as what other libraries or the final application 
            expects.
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemParameters">
            <summary>
            Contains parameters that influence the behavior of the component on the monitored item level.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.SessionParameters">
            <summary>
            Contains parameters that influence the behavior of the component on the session level.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.SubscriptionParameters">
            <summary>
            Contains parameters that influence the behavior of the component on the subscription level.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAClient.SynchronizationContext">
            <summary>
            Contains synchronization context used by the object when performing asynchronous operations (including event 
            notifications).
            </summary>
        </member>
        <member name="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged">
            <summary>
            Raised for every significant change in a subscribed OPC monitored item.
            </summary>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.SubscribeMonitoredItem.Overload1.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.SubscribeMonitoredItem.Overload1.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.SubscribeMultipleMonitoredItems.Overload1.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.SubscribeMultipleMonitoredItems.Overload1.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAObjectIds">
            <summary>
            A class that declares constants for Objects in the Model Design.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAObjectIds.DataTypes">
            <summary>
            The node Id for the DataTypes object (folder). 
            </summary>
            <remarks>
            DataTypes: 
            <br/>
            "This standard Object is the browse entry point for DataTypes that the Server wishes to expose in
            the AddressSpace. The standard Object uses Organizes References to reference Objects of the
            DataTypeSystemType representing DataTypeSystems. Referenced by those Objects are
            DataTypeDictionaries that refer to their DataTypeDescriptions."
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAObjectIds.EventTypes">
            <summary>
            The node Id for the EventTypes object (folder). 
            </summary>
            <remarks>
            EventTypes:
            <br/>
            "This standard Object Node is the browse entry point for EventType Nodes. "
            <br/>
            "Only Organizes References are used to relate Objects and ObjectTypes to the “EventTypes” standard
            Object. "
            <br/>
            "The intention of the “EventTypes” Object is that all EventTypes of the Server are either directly or
            indirectly accessible browsing HierarchicalReferences starting from this Node. It is required that the
            Server expose all its EventTypes, so a client can usefully subscribe to Events."
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAObjectIds.Objects">
            <summary>
            The node Id for the Objects object (folder). 
            </summary>
            <remarks>
            Objects:
            <br/>
            "This standard Object is the browse entry point for Object Nodes."
            <br/>
            "Only Organizes References are used to relate Objects to the “Objects” standard
            Object. A View Node can be used as entry point into a subset of the AddressSpace containing
            Objects and Variables and thus the “Objects“ Object can also reference View Nodes using
            Organizes References. The intent of the “Objects” Object is that all Objects and Variables that are
            not used for type definitions or other organizational purposes (e.g. organizing the Views) are
            accessible through hierarchical References starting from this Node. However, this is not a
            requirement, because not all servers may be able to support this. This Object references the
            standard Server Object."
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAObjectIds.ObjectTypes">
            <summary>
            The node Id for the ObjectTypes object (folder). 
            </summary>
            <remarks>
            ObjectTypes:
            <br/>
            "This standard Object Node is the browse entry point for ObjectType Nodes."
            <br/>
            "Only Organizes References are used to relate Objects and ObjectTypes to the “ObjectTypes” standard Object."
            <br/>
            "The intention of the “ObjectTypes” Object is that all ObjectTypes of the Server are either directly or
            indirectly accessible browsing HierarchicalReferences starting from this Node. However, this is not
            required and servers might not provide some of their ObjectTypes because they may be well-known
            in the industry."
            <br/>
            "This Object also indirectly references the BaseEventType defined in 85H6.4.2, which is the base type of
            all EventTypes. Thereby it is the entry point for all EventTypes provided by the Server. It is required
            that the Server expose all its EventTypes."
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAObjectIds.OpcBinary">
            <summary>
            The node Id for the OPC Binary object (type system). 
            </summary>
            <remarks>
            OPC Binary:
            <br/>
            "OPC Binary is a standard DataTypeSystem defined by OPC. It is represented in the AddressSpace
            by an Object Node."
            <br/>
            "OPC Binary uses XML to describe complex binary data values.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAObjectIds.ReferenceTypes">
            <summary>
            The node Id for the ReferenceTypes object (folder). 
            </summary>
            <remarks>
            Reference Types:
            <br/>
            "This standard Object is the browse entry point for ReferenceType Nodes."
            <br/>
            "Organizes References are used to define ReferenceTypes and
            Objects referenced by the “ReferenceTypes” Object. The “ReferenceTypes” Object shall not
            reference any other NodeClasses.""
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAObjectIds.Root">
            <summary>
            The node Id for the Root object (folder). 
            </summary>
            <remarks>
            Root:
            <br/>
            "This standard Object is the browse entry point for the AddressSpace. It contains a set of Organizes
            References that point to the other standard Objects."
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAObjectIds.Server">
            <summary>
            The node Id for the Server object. 
            </summary>
            <remarks>
            Server Object:
            <br/>
            "This Object is used as the browse entry point for information about the Server."
            <br/>
            "The Server Object serves as root notifier, i.e. its EventNotifier Attribute shall be set providing Events."
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAObjectIds.Types">
            <summary>
            The node Id for the Types object (folder). 
            </summary>
            <remarks>
            Types:
            <br/>
            "This standard Object Node is the browse entry point for type Nodes."
            <br/>
            "Only Organizes References are used to relate Objects to the “Types” standard Object."
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAObjectIds.VariableTypes">
            <summary>
            The node Id for the VariableTypes object (folder). 
            </summary>
            <remarks>
            VariableTypes:
            <br/>
            "This standard Object is the browse entry point for VariableType Nodes."
            <br/>
            "Only Organizes References are used to relate Objects and VariableTypes to the “VariableTypes” standard Object."
            <br/>
            "The intent of the “VariableTypes” Object is that all VariableTypes of the Server are either directly or
            indirectly accessible browsing HierarchicalReferences starting from this Node. However, this is not
            required and servers might not provide some of their VariableTypes, because they may be wellknown
            in the industry, such as the “BaseVariableType”.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAObjectIds.Views">
            <summary>
            The node Id for the Views object (folder). 
            </summary>
            <remarks>
            Views:
            <br/>
            "This standard Object is the browse entry point for Views. Only Organizes References are used to
            relate View Nodes to the “Views” standard Object. All View Nodes in the AddressSpace shall be
            referenced by this Node, either directly or indirectly. I.e. the “Views” Object may reference other
            Objects using Organizes References. Those Objects may reference additional Views."
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAObjectIds.XmlSchema">
            <summary>
            The node Id for the XML Schema object (type system). 
            </summary>
            <remarks>
            XML Schema:
            <br/>
            "XML Schema is a standard DataTypeSystem defined by the W3C. It is represented in the
            AddressSpace by an Object Node. XML Schema documents are XML documents whose xmlns
            attribute in the first line is:
            <br/>
            schema xmlns=http://www.w3.org/1999/XMLSchema
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAIndexRangeList">
            <summary>
            List of index ranges. Can be used to identify the whole array, a single element of a structure or an
            array, or a single range of indexes for arrays.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAIndexRangeList.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAIndexRangeList.#ctor(System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.UA.UAIndexRange})">
            <param name="indexRangeEnumerable">A list of index ranges to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAIndexRangeList.TryParse(System.String,OpcLabs.EasyOpc.UA.UAIndexRangeList@)">
            <summary>
            Converts the specified string representation of an index range list to its UAIndexRangeList equivalent.
            </summary>
            <param name="input">A string containing an index range list to convert. </param>
            <param name="result">
            When this method returns, contains the UAIndexRangeList value equivalent to the index range list contained in the 
            input arguments, if the conversion succeeded, or <c>null</c> if the conversion failed. The conversion fails if the 
            input argument does not contain a valid string representation of an index range list. This parameter is passed 
            uninitialized. </param>
            <returns><c>true</c> if the input parameter was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAIndexRangeList.ToString">
            <summary>
            Returns a string that represents the current index range list.
            </summary>
            <returns>Returns a specifically formatted string that represents the index range list.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAClientSession.ReadDataValues(System.Double,Opc.Ua.ReadValueIdCollection,System.Collections.Generic.List{Opc.Ua.DataValue}@,System.Collections.Generic.List{Opc.Ua.ServiceResult}@)">
            <summary>
            Reads the data values for a set of variables.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAIndexRange">
            <summary>
            An index range. Determines a continuous span of elements for a single dimension of an array.
            </summary>
            <remarks>
            The index range can contain a single element, but it cannot be empty.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAIndexRange.#ctor(System.Int32)">
            <summary>
            Creates a range containing a single value.
            </summary>
            <param name="single">A value for range's minimum and maximum.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAIndexRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a range with a given minimum and maximum.
            </summary>
            <param name="minimum">A minimum value of the range (i.e. a lower bound).</param>
            <param name="maximum">A maximum value of the range (i.e. an upper bound).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAIndexRange.op_Equality(OpcLabs.EasyOpc.UA.UAIndexRange,OpcLabs.EasyOpc.UA.UAIndexRange)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="indexRange1">First object to be compared.</param>
            <param name="indexRange2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAIndexRange.op_Inequality(OpcLabs.EasyOpc.UA.UAIndexRange,OpcLabs.EasyOpc.UA.UAIndexRange)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="indexRange1">First object to be compared.</param>
            <param name="indexRange2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAIndexRange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current object.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAIndexRange.Equals(OpcLabs.EasyOpc.UA.UAIndexRange)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.UA.UAIndexRange"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.UA.UAIndexRange"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAIndexRange.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAIndexRange.SetRange(System.Int32,System.Int32)">
            <summary>
            Modifies the minimum and maximum of the range at the same time.
            </summary>
            <param name="minimum">A minimum value of the range (i.e. a lower bound).</param>
            <param name="maximum">A maximum value of the range (i.e. an upper bound).</param>
            <remarks>
            Use this method if you need to change both the minimum and maximum. Setting the properties sequantially can
            raise an exception in some cases, because the minimum must always be less than or equal to the maximum.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAIndexRange.ToString">
            <summary>
            Returns a string that represents the current index range.
            </summary>
            <returns>Returns a specifically formatted string that represents the index range.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAIndexRange.Span">
            <summary>
            The number of elements specified by the range (Maximum - Minimum + 1).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAIndexRange.Maximum">
            <summary>
            A maximum value of the range (i.e. an upper bound).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAIndexRange.Minimum">
            <summary>
            A minimum value of the range (i.e. a lower bound).
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UATreePosition">
            <summary>
            A position in a tree of nodes.
            </summary>
            <remarks>
            <para>
            The node that corresponds to the root of the tree is special in that from the properties inherited from
            <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/>, only the Node Id is filled in.</para>
            <para>
            The tree positions can be used to obtain information about the current node, and the nodes on the path to the root,
            but you cannot access child or sibling nodes of the current node. This is because the tree is constructed 
            "on the fly", as the OPC address space is traversed, and sufficient information about child or sibling nodes
            may not be available.</para>
            </remarks>
            <seealso cref="M:OpcLabs.EasyOpc.UA.EasyUAClientExtension.TraverseNodeTree(OpcLabs.EasyOpc.UA.EasyUAClient,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId)"/>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UANodeElement">
            <summary>Contains information gathered about a node in OPC server's address space.</summary>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.BrowseDataNodes.Overload1.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.BrowseDataNodes.Overload1.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
            <remarks>
            This object is filled in and returned e.g. when you browse the OPC server's address space.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeElement.op_Implicit(OpcLabs.EasyOpc.UA.UANodeElement)~OpcLabs.EasyOpc.UA.UANodeId">
            <summary>
            Converts a <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> to a node Id.
            </summary>
            <param name="nodeElement">The node element to be converted.</param>
            <returns>For a non-null input, returns the node Id with expanded text from the node element.
            Returns <c>null</c> if the input is <c>null</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeElement.op_Implicit(OpcLabs.EasyOpc.UA.UANodeElement)~OpcLabs.EasyOpc.UA.UAQualifiedName">
            <summary>
            Converts a <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> to a qualified name.
            </summary>
            <param name="nodeElement">The node element to be converted.</param>
            <returns>For a non-null input, returns the qualified name with expanded text from the browse name of the node 
            element.
            Returns <c>null</c> if the input is <c>null</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeElement.ToUANodeId(OpcLabs.EasyOpc.UA.UANodeElement)">
            <summary>
            Converts a <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> to a node Id.
            </summary>
            <param name="nodeElement">The node element to be converted.</param>
            <returns>For a non-null input, returns the node Id with expanded text from the node element.
            Returns <c>null</c> if the input is <c>null</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeElement.ToUAQualifiedName(OpcLabs.EasyOpc.UA.UANodeElement)">
            <summary>
            Converts a <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> to a qualified name.
            </summary>
            <param name="nodeElement">The node element to be converted.</param>
            <returns>For a non-null input, returns the qualified name with expanded text from the browse name of the node 
            element.
            Returns <c>null</c> if the input is <c>null</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeElement.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UANodeElement.BrowseName">
            <summary>
            Browse name of the node (this string is intended for programmatic use). 
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UANodeElement.NodeId">
            <summary>
            Node Id of this node.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UANodeElement.IsForward">
            <summary>
            The node has been reached by following a forward reference.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UANodeElement.DisplayName">
            <summary>
            The display name of the node (this string is localized and intended to be human readable).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UANodeElement.NodeClass">
            <summary>
            The class of the node.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UANodeElement.ReferenceTypeId">
            <summary>
            Type Id of the reference that was used to reach the node.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UANodeElement.TypeDefinition">
            <summary>
            Type Id of the type of this node.
            </summary>
            <remarks>
            typeDefinition:<br/>
            "Type definitions are only available for the NodeClasses Object and Variable. For all other NodeClasses a null 
            NodeId shall be returned."<br/>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UATreePosition.GetRoot">
            <summary>
            Determines root of a tree to which the current tree position belongs.
            </summary>
            <returns>Returns a root position in this tree.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UATreePosition.BrowseException">
            <summary>
            Gets the exception encountered during browsing.
            </summary>
            <returns>Returns <c>null</c> reference if there has not been an exception during browsing from this node. 
            Otherwise, returns the exception that prevented the object from browsing further.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UATreePosition.Level">
            <summary>
            Determines the level of this object inside a tree.
            </summary>
            <returns>Level of the object.</returns>
            <remarks>The root has a level of 0.</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UATreePosition.IsRoot">
            <summary>
            Determines whether this object represents a root of the tree.
            </summary>
            <returns><c>True</c> if this objects represents a root; <c>false</c> otherwise.</returns>
            <remarks>The root object does not have the <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> information filled in, except for the
            <see cref="P:OpcLabs.EasyOpc.UA.UANodeElement.NodeId"/>.</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UATreePosition.Parent">
            <summary>
            Gets the parent object in the tree.
            </summary>
            <returns>Returns parent object, or <c>null</c> if this object is a root of the tree.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UATreePosition.ParentNodeId">
            <summary>
            Gets the Node Id of the parent object.
            </summary>
            <returns>Returns a node if of the parent object, or <c>null</c> if this object is a root of the tree.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UACertificateAcceptancePolicy">
            <summary>
            Contains parameters that determine which certificates are accepted.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UACertificateAcceptancePolicy.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UACertificateAcceptancePolicy.#ctor(OpcLabs.EasyOpc.UA.UACertificateAcceptancePolicy)">
            <param name="policy">Policy object to be copied from.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UACertificateAcceptancePolicy.AcceptAnyCertificate">
            <summary>
            Determines whether the client accepts any server certificate, even if a certificate validation error occurs.
            </summary>
            <remarks>Setting this property to <c>true</c> effectively bypasses an important security feature in OPC Unified
            Architecture. Use it only for testing and development purposes, or if your application does not require the server
            certificate check.</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UACertificateAcceptancePolicy.TrustedEndpointUrlStrings">
            <summary>
            Contains an array of endpoint URLs that are always trusted, without regard for the certificate provided.
            </summary>
            <remarks>In a fully secure configuration, this list should be empty.</remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAEndpointSelectionPolicy">
            <summary>
            Determines how the UA client chooses the endpoint from the endpoints provided by the UA server.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAEndpointSelectionPolicy.#ctor">
            <overloads>
            Initializes a new instance of the class.
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAEndpointSelectionPolicy.#ctor(OpcLabs.EasyOpc.UA.UAEndpointSelectionPolicy)">
            <param name="endpointSelectionPolicy">Endpoint selection policy object to be copied from.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAEndpointSelectionPolicy.PreferMessageSecurity">
            <summary>
            If <c>true</c>, endpoints that provide message security are preferred for selection.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAEndpointDescriptor">
            <summary>
            Contains data defining a connection to the OPC-UA Server (mainly, its URL string).
            </summary>
            <remarks>
            <para>
            An implicit conversion from a <see cref="T:System.String"/> containing the URL of the endpoint exists.
            It is therefore common to specify <see cref="T:OpcLabs.EasyOpc.UA.UAEndpointDescriptor"/>-s as strings, relying on the implicit conversion.
            </para>
            <para>
            EndPoint:<br/>
            "a physical address available on a network that allows Clients to access one or more Services
            provided by a Server."<br/>
            REMARK: "Each Server may have multiple Endpoints. The address of an Endpoint shall include a
            HostName."<br/></para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAEndpointDescriptor.#ctor">
            <overloads>
            Initializes a new instance of the class.
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAEndpointDescriptor.#ctor(System.String)">
            <param name="endpointUrlString">The network address that the Client wishes to use to access the Server.</param>
            <remarks>
            <para>
            A generic string is used instead of <see cref="T:System.Uri"/>, because in some cases, the value may not represent
            a real URI.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAEndpointDescriptor.#ctor(OpcLabs.EasyOpc.UA.UAApplicationElement)">
            <param name="applicationElement">Contains information gathered about an OPC application.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAEndpointDescriptor.#ctor(System.Uri)">
            <param name="endpointUri">The URI that the client wishes to use to access the server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAEndpointDescriptor.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor)">
            <param name="endpointDescriptor">Endpoint descriptor to be copied from. Identifies the OPC-UA server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAEndpointDescriptor.op_Equality(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UAEndpointDescriptor)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="endpointDescriptor1">First object to be compared.</param>
            <param name="endpointDescriptor2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAEndpointDescriptor.op_Inequality(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UAEndpointDescriptor)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="endpointDescriptor1">First object to be compared.</param>
            <param name="endpointDescriptor2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAEndpointDescriptor.op_Implicit(System.String)~OpcLabs.EasyOpc.UA.UAEndpointDescriptor">
            <summary>
            Converts a <see cref="T:System.String"/> to an endpoint descriptor.
            </summary>
            <param name="endpointUrlString">The string to be converted.</param>
            <returns>For a non-null input, returns the endpoint descriptor with the given URL string.
            Returns <c>null</c> if the input is <c>null</c>.</returns>
            <remarks>
            <para>
            A generic string is used instead of <see cref="T:System.Uri"/>, because in some cases, the value may not represent
            a real URI.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAEndpointDescriptor.op_Implicit(System.Uri)~OpcLabs.EasyOpc.UA.UAEndpointDescriptor">
            <summary>
            Converts a <see cref="T:System.Uri"/> to an endpoint descriptor.
            </summary>
            <param name="endpointUri">The URI to be converted,</param>
            <returns>For a non-null input, returns the endpoint descriptor with the given URI.
            Returns an endpoint descriptor with an empty URL string if the input is <c>null</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAEndpointDescriptor.FromString(System.String)">
            <summary>
            Converts a string to an endpoint descriptor.
            </summary>
            <param name="endpointUrlString">The network address that the Client wishes to use to access the Server.</param>
            <returns>Returns an endpoint descriptor with the specified network address (endpoint URL).</returns>
            <remarks>
            <para>
            A generic string is used instead of <see cref="T:System.Uri"/>, because in some cases, the value may not represent
            a real URI.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAEndpointDescriptor.FromUri(System.Uri)">
            <summary>
            Converts a <see cref="T:System.Uri"/> to an endpoint descriptor.
            </summary>
            <param name="endpointUri">The URI that the client wishes to use to access the server.</param>
            <returns>Returns an endpoint descriptor with the specified endpoint URL.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAEndpointDescriptor.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current object.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAEndpointDescriptor.Equals(OpcLabs.EasyOpc.UA.UAEndpointDescriptor)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.UA.UAEndpointDescriptor"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.UA.UAEndpointDescriptor"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAEndpointDescriptor.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAEndpointDescriptor.ToString">
            <summary>
            Returns a string that represents the current endpoint descriptor.
            </summary>
            <returns>Returns the URI string of the server.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAEndpointDescriptor.EndpointUrlString">
            <summary>
            A URL string of the server endpoint.
            </summary>
            <remarks>
            <para>
            A generic string is used instead of <see cref="T:System.Uri"/>, because in some cases, the value may not represent
            a real URI.</para>
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngine_LicenseNotValid">
            <summary>
              Looks up a localized string similar to License is not valid..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngine_RunTimeIsOverLimit">
            <summary>
              Looks up a localized string similar to Run time is over the limit. The license you have (most likely trial version) does not provide valid data after certain time period expires. Note that after the component&apos;s process is simply restarted, valid data will be provided again. Obtain and install proper license to resolve this error..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngine_StatusIsNotGood">
            <summary>
              Looks up a localized string similar to Status is not good..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngine_SubscriptionHandleBelongsToOtherClient">
            <summary>
              Looks up a localized string similar to Subscription handle belongs to other client..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.Resource1.EasyUAEngine_SubscriptionHandleIsInvalid">
            <summary>
              Looks up a localized string similar to Subscription handle is invalid..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.EasyUAMonitoringParameters">
            <summary>
            Contains requested monitoring parameters (such as the sampling interval, and optional 
            data change filter).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoringParameters.#ctor">
            <overloads>
            Initializes a new instance of the class.
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoringParameters.#ctor(System.Int32)">
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoringParameters.#ctor(System.Int32,OpcLabs.EasyOpc.UA.UADataChangeFilter)">
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <param name="dataChangeFilter">Defines the conditions under which a data change notification should be reported.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoringParameters.#ctor(System.Int32,OpcLabs.EasyOpc.UA.UADataChangeFilter,System.Int32)">
            <param name="samplingInterval">The sampling interval (in milliseconds) indicates the fastest rate at which the 
            Server should sample its underlying source for data changes.</param>
            <param name="dataChangeFilter">Defines the conditions under which a data change notification should be reported.</param>
            <param name="queueSize">The requested size of the MonitoredItem queue.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoringParameters.#ctor(OpcLabs.EasyOpc.UA.UAMonitoringParameters)">
            <param name="monitoringParameters">Contains monitoring parameters (such as the sampling interval, and optional 
            data change filter).</param>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UACodeBits">
            <summary>
            The code bits of the status code (<see cref="T:OpcLabs.EasyOpc.UA.UAStatusCode"/>).
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.Good">
            <summary>
            The operation completed successfully.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.Uncertain">
            <summary>
            The operation completed however its outputs may not be usable.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.Bad">
            <summary>
            The operation failed.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadUnexpectedError">
            <summary>
            An unexpected error occurred.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadInternalError">
            <summary>
            An internal error occurred as a result of a programming or configuration error.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadOutOfMemory">
            <summary>
            Not enough memory to complete the operation.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadResourceUnavailable">
            <summary>
            An operating system resource is not available.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadCommunicationError">
            <summary>
            A low level communication error occurred.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadEncodingError">
            <summary>
            Encoding halted because of invalid data in the objects being serialized.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadDecodingError">
            <summary>
            Decoding halted because of invalid data in the stream.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadEncodingLimitsExceeded">
            <summary>
            The message encoding/decoding limits imposed by the stack have been exceeded.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadRequestTooLarge">
            <summary>
            The request message size exceeds limits set by the server.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadResponseTooLarge">
            <summary>
            The response message size exceeds limits set by the client.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadUnknownResponse">
            <summary>
            An unrecognized response was received from the server.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadTimeout">
            <summary>
            The operation timed out.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadServiceUnsupported">
            <summary>
            The server does not support the requested service.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadShutdown">
            <summary>
            The operation was cancelled because the application is shutting down.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadServerNotConnected">
            <summary>
            The operation could not complete because the client is not connected to the server.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadServerHalted">
            <summary>
            The server has stopped and cannot process any requests.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNothingToDo">
            <summary>
            There was nothing to do because the client passed a list of operations with no elements.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadTooManyOperations">
            <summary>
            The request could not be processed because it specified too many operations.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadDataTypeIdUnknown">
            <summary>
            The extension object cannot be (de)serialized because the data type id is not recognized.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadCertificateInvalid">
            <summary>
            The certificate provided as a parameter is not valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadSecurityChecksFailed">
            <summary>
            An error occurred verifying security.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadCertificateTimeInvalid">
            <summary>
            The Certificate has expired or is not yet valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadCertificateIssuerTimeInvalid">
            <summary>
            An Issuer Certificate has expired or is not yet valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadCertificateHostNameInvalid">
            <summary>
            The HostName used to connect to a Server does not match a HostName in the Certificate.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadCertificateUriInvalid">
            <summary>
            The URI specified in the ApplicationDescription does not match the URI in the Certificate.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadCertificateUseNotAllowed">
            <summary>
            The Certificate may not be used for the requested operation.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadCertificateIssuerUseNotAllowed">
            <summary>
            The Issuer Certificate may not be used for the requested operation.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadCertificateUntrusted">
            <summary>
            The Certificate is not trusted.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadCertificateRevocationUnknown">
            <summary>
            It was not possible to determine if the Certificate has been revoked.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadCertificateIssuerRevocationUnknown">
            <summary>
            It was not possible to determine if the Issuer Certificate has been revoked.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadCertificateRevoked">
            <summary>
            The Certificate has been revoked.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadCertificateIssuerRevoked">
            <summary>
            The Issuer Certificate has been revoked.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadUserAccessDenied">
            <summary>
            User does not have permission to perform the requested operation.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadIdentityTokenInvalid">
            <summary>
            The user identity token is not valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadIdentityTokenRejected">
            <summary>
            The user identity token is valid but the server has rejected it.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadSecureChannelIdInvalid">
            <summary>
            The specified secure channel is not longer valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadInvalidTimestamp">
            <summary>
            The timestamp is outside the range allowed by the server.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNonceInvalid">
            <summary>
            The nonce does appear to be not a random value or it is not the correct length.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadSessionIdInvalid">
            <summary>
            The session id is not valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadSessionClosed">
            <summary>
            The session was closed by the client.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadSessionNotActivated">
            <summary>
            The session cannot be used because ActivateSession has not been called.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadSubscriptionIdInvalid">
            <summary>
            The subscription id is not valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadRequestHeaderInvalid">
            <summary>
            The header for the request is missing or invalid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadTimestampsToReturnInvalid">
            <summary>
            The timestamps to return parameter is invalid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadRequestCancelledByClient">
            <summary>
            The request was cancelled by the client.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.GoodSubscriptionTransferred">
            <summary>
            The subscription was transferred to another session.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.GoodCompletesAsynchronously">
            <summary>
            The processing will complete asynchronously.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.GoodOverload">
            <summary>
            Sampling has slowed down due to resource limitations.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.GoodClamped">
            <summary>
            The value written was accepted but was clamped.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNoCommunication">
            <summary>
            Communication with the data source is defined, but not established, and there is no last known value available.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadWaitingForInitialData">
            <summary>
            Waiting for the server to obtain values from the underlying data source.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNodeIdInvalid">
            <summary>
            The syntax of the node id is not valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNodeIdUnknown">
            <summary>
            The node id refers to a node that does not exist in the server address space.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadAttributeIdInvalid">
            <summary>
            The attribute is not supported for the specified Node.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadIndexRangeInvalid">
            <summary>
            The syntax of the index range parameter is invalid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadIndexRangeNoData">
            <summary>
            No data exists within the range of indexes specified.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadDataEncodingInvalid">
            <summary>
            The data encoding is invalid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadDataEncodingUnsupported">
            <summary>
            The server does not support the requested data encoding for the node.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNotReadable">
            <summary>
            The access level does not allow reading or subscribing to the Node.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNotWritable">
            <summary>
            The access level does not allow writing to the Node.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadOutOfRange">
            <summary>
            The value was out of range.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNotSupported">
            <summary>
            The requested operation is not supported.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNotFound">
            <summary>
            A requested item was not found or a search operation ended without success.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadObjectDeleted">
            <summary>
            The object cannot be used because it has been deleted.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNotImplemented">
            <summary>
            Requested operation is not implemented.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadMonitoringModeInvalid">
            <summary>
            The monitoring mode is invalid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadMonitoredItemIdInvalid">
            <summary>
            The monitoring item id does not refer to a valid monitored item.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadMonitoredItemFilterInvalid">
            <summary>
            The monitored item filter parameter is not valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadMonitoredItemFilterUnsupported">
            <summary>
            The server does not support the requested monitored item filter.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadFilterNotAllowed">
            <summary>
            A monitoring filter cannot be used in combination with the attribute specified.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadStructureMissing">
            <summary>
            A mandatory structured parameter was missing or null.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadEventFilterInvalid">
            <summary>
            The event filter is not valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadContentFilterInvalid">
            <summary>
            The content filter is not valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadFilterOperatorInvalid">
            <summary>
            An unregognized operator was provided in a filter.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadFilterOperatorUnsupported">
            <summary>
            A valid operator was provided, but the server does not provide support for this filter operator.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadFilterOperandCountMismatch">
            <summary>
            The number of operands provided for the filter operator was less then expected for the operand provided.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadFilterOperandInvalid">
            <summary>
            The operand used in a content filter is not valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadFilterElementInvalid">
            <summary>
            The referenced element is not a valid element in the content filter.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadFilterLiteralInvalid">
            <summary>
            The referenced literal is not a valid value.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadContinuationPointInvalid">
            <summary>
            The continuation point provide is longer valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNoContinuationPoints">
            <summary>
            The operation could not be processed because all continuation points have been allocated.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadReferenceTypeIdInvalid">
            <summary>
            The operation could not be processed because all continuation points have been allocated.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadBrowseDirectionInvalid">
            <summary>
            The browse direction is not valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNodeNotInView">
            <summary>
            The node is not part of the view.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadServerUriInvalid">
            <summary>
            The ServerUri is not a valid URI.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadServerNameMissing">
            <summary>
            No ServerName was specified.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadDiscoveryUrlMissing">
            <summary>
            No DiscoveryUrl was specified.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadSempahoreFileMissing">
            <summary>
            The semaphore file specified by the client is not valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadRequestTypeInvalid">
            <summary>
            The security token request type is not valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadSecurityModeRejected">
            <summary>
            The security mode does not meet the requirements set by the Server.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadSecurityPolicyRejected">
            <summary>
            The security policy does not meet the requirements set by the Server.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadTooManySessions">
            <summary>
            The server has reached its maximum number of sessions.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadUserSignatureInvalid">
            <summary>
            The user token signature is missing or invalid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadApplicationSignatureInvalid">
            <summary>
            The signature generated with the client certificate is missing or invalid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNoValidCertificates">
            <summary>
            The client did not provide at least one software certificate that is valid and meets the profile requirements for the server.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadIdentityChangeNotSupported">
            <summary>
            The Server does not support changing the user identity assigned to the session.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadRequestCancelledByRequest">
            <summary>
            The request was cancelled by the client with the Cancel service.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadParentNodeIdInvalid">
            <summary>
            The parent node id does not to refer to a valid node.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadReferenceNotAllowed">
            <summary>
            The reference could not be created because it violates constraints imposed by the data model.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNodeIdRejected">
            <summary>
            The requested node id was reject because it was either invalid or server does not allow node ids to be specified by the client.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNodeIdExists">
            <summary>
            The requested node id is already used by another node.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNodeClassInvalid">
            <summary>
            The node class is not valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadBrowseNameInvalid">
            <summary>
            The browse name is invalid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadBrowseNameDuplicated">
            <summary>
            The browse name is not unique among nodes that share the same relationship with the parent.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNodeAttributesInvalid">
            <summary>
            The node attributes are not valid for the node class.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadTypeDefinitionInvalid">
            <summary>
            The type definition node id does not reference an appropriate type node.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadSourceNodeIdInvalid">
            <summary>
            The source node id does reference a valid node.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadTargetNodeIdInvalid">
            <summary>
            The target node id does reference a valid node.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadDuplicateReferenceNotAllowed">
            <summary>
            The reference type between the nodes is already defined.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadInvalidSelfReference">
            <summary>
            The server does not allow this type of self reference on this node.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadReferenceLocalOnly">
            <summary>
            The reference type is not valid for a reference to a remote server.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNoDeleteRights">
            <summary>
            The server will not allow the node to be deleted.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.UncertainReferenceNotDeleted">
            <summary>
            The server was not able to delete all target references.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadServerIndexInvalid">
            <summary>
            The server index is not valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadViewIdUnknown">
            <summary>
            The view id does not refer to a valid view node.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadViewTimestampInvalid">
            <summary>
            The view timestamp is not available or not supported.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadViewParameterMismatch">
            <summary>
            The view parameters are not consistent with each other.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadViewVersionInvalid">
            <summary>
            The view version is not available or not supported.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.UncertainNotAllNodesAvailable">
            <summary>
            The list of references may not be complete because the underlying system is not available.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.GoodResultsMayBeIncomplete">
            <summary>
            The server should have followed a reference to a node in a remote server but did not. The result set may be incomplete.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNotTypeDefinition">
            <summary>
            The provided Nodeid was not a type definition nodeid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.UncertainReferenceOutOfServer">
            <summary>
            One of the references to follow in the relative path references to a node in the address space in another server.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadTooManyMatches">
            <summary>
            The requested operation has too many matches to return.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadQueryTooComplex">
            <summary>
            The requested operation requires too many resources in the server.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNoMatch">
            <summary>
            The requested operation has no match to return.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadMaxAgeInvalid">
            <summary>
            The max age parameter is invalid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadHistoryOperationInvalid">
            <summary>
            The history details parameter is not valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadHistoryOperationUnsupported">
            <summary>
            The server does not support the requested operation.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadInvalidTimestampArgument">
            <summary>
            The defined timestamp to return was invalid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadWriteNotSupported">
            <summary>
            The server not does support writing the combination of value, status and timestamps provided.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadTypeMismatch">
            <summary>
            The value supplied for the attribute is not of the same type as the attribute's value.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadMethodInvalid">
            <summary>
            The method id does not refer to a method for the specified object.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadArgumentsMissing">
            <summary>
            The client did not specify all of the input arguments for the method.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadTooManySubscriptions">
            <summary>
            The server has reached its  maximum number of subscriptions.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadTooManyPublishRequests">
            <summary>
            The server has reached the maximum number of queued publish requests.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNoSubscription">
            <summary>
            There is no subscription available for this session.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadSequenceNumberUnknown">
            <summary>
            The sequence number is unknown to the server.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadMessageNotAvailable">
            <summary>
            The requested notification message is no longer available.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadInsufficientClientProfile">
            <summary>
            The Client of the current Session does not support one or more Profiles that are necessary for the Subscription.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadStateNotActive">
            <summary>
            The sub-state machine is not currently active.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadTcpServerTooBusy">
            <summary>
            The server cannot process the request because it is too busy.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadTcpMessageTypeInvalid">
            <summary>
            The type of the message specified in the header invalid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadTcpSecureChannelUnknown">
            <summary>
            The SecureChannelId and/or TokenId are not currently in use.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadTcpMessageTooLarge">
            <summary>
            The size of the message specified in the header is too large.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadTcpNotEnoughResources">
            <summary>
            There are not enough resources to process the request.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadTcpInternalError">
            <summary>
            An internal error occurred.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadTcpEndpointUrlInvalid">
            <summary>
            The Server does not recognize the QueryString specified.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadRequestInterrupted">
            <summary>
            The request could not be sent because of a network interruption.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadRequestTimeout">
            <summary>
            Timeout occurred while processing the request.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadSecureChannelClosed">
            <summary>
            The secure channel has been closed.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadSecureChannelTokenUnknown">
            <summary>
            The token has expired or is not recognized.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadSequenceNumberInvalid">
            <summary>
            The sequence number is not valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadProtocolVersionUnsupported">
            <summary>
            The applications do not have compatible protocol versions.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadConfigurationError">
            <summary>
            There is a problem with the configuration that affects the usefulness of the value.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNotConnected">
            <summary>
            The variable should receive its value from another variable, but has never been configured to do so.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadDeviceFailure">
            <summary>
            There has been a failure in the device/data source that generates the value that has affected the value.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadSensorFailure">
            <summary>
            There has been a failure in the sensor from which the value is derived by the device/data source.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadOutOfService">
            <summary>
            The source of the data is not operational.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadDeadbandFilterInvalid">
            <summary>
            The deadband filter is not valid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.UncertainNoCommunicationLastUsableValue">
            <summary>
            Communication to the data source has failed. The variable value is the last value that had a good quality.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.UncertainLastUsableValue">
            <summary>
            Whatever was updating this value has stopped doing so.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.UncertainSubstituteValue">
            <summary>
            The value is an operational value that was manually overwritten.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.UncertainInitialValue">
            <summary>
            The value is an initial value for a variable that normally receives its value from another variable.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.UncertainSensorNotAccurate">
            <summary>
            The value is at one of the sensor limits.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.UncertainEngineeringUnitsExceeded">
            <summary>
            The value is outside of the range of values defined for this parameter.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.UncertainSubNormal">
            <summary>
            The value is derived from multiple sources and has less than the required number of Good sources.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.GoodLocalOverride">
            <summary>
            The value has been overridden.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadRefreshInProgress">
            <summary>
            This Condition refresh failed, a Condition refresh operation is already in progress.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadConditionAlreadyDisabled">
            <summary>
            This condition has already been disabled.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadConditionAlreadyEnabled">
            <summary>
            This condition has already been enabled.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadConditionDisabled">
            <summary>
            Property not available, this condition is disabled.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadEventIdUnknown">
            <summary>
            The specified event id is not recognized.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadEventNotAcknowledgeable">
            <summary>
            The event cannot be acknowledged.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadDialogNotActive">
            <summary>
            The dialog condition is not active.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadDialogResponseInvalid">
            <summary>
            The response is not valid for the dialog.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadConditionBranchAlreadyAcked">
            <summary>
            The condition branch has already been acknowledged.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadConditionBranchAlreadyConfirmed">
            <summary>
            The condition branch has already been confirmed.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadConditionAlreadyShelved">
            <summary>
            The condition has already been shelved.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadConditionNotShelved">
            <summary>
            The condition is not currently shelved.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadShelvingTimeOutOfRange">
            <summary>
            The shelving time not within an acceptable range.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNoData">
            <summary>
            No data exists for the requested time range or event filter.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadBoundNotFound">
            <summary>
            No data found to provide upper or lower bound value.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadBoundNotSupported">
            <summary>
            The server cannot retrieve a bound for the variable.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadDataLost">
            <summary>
            Data is missing due to collection started/stopped/lost.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadDataUnavailable">
            <summary>
            Expected data is unavailable for the requested time range due to an un-mounted volume, an off-line archive or tape, or similar reason for temporary unavailability.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadEntryExists">
            <summary>
            The data or event was not successfully inserted because a matching entry exists.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNoEntryExists">
            <summary>
            The data or event was not successfully updated because no matching entry exists.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadTimestampNotSupported">
            <summary>
            The client requested history using a timestamp format the server does not support (i.e requested ServerTimestamp when server only supports SourceTimestamp).
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.GoodEntryInserted">
            <summary>
            The data or event was successfully inserted into the historical database.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.GoodEntryReplaced">
            <summary>
            The data or event field was successfully replaced in the historical database.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.UncertainDataSubNormal">
            <summary>
            The value is derived from multiple values and has less than the required number of Good values.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.GoodNoData">
            <summary>
            No data exists for the requested time range or event filter.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.GoodMoreData">
            <summary>
            The data or event field was successfully replaced in the historical database.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadAggregateListMismatch">
            <summary>
            The requested number of Aggregates does not match the requested number of NodeIds.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadAggregateNotSupported">
            <summary>
            The requested Aggregate is not support by the server.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadAggregateInvalidInputs">
            <summary>
            The aggregate value could not be derived due to invalid data inputs.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadAggregateConfigurationRejected">
            <summary>
            The aggregate configuration is not valid for specified node.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.GoodDataIgnored">
            <summary>
            The request pecifies fields which are not valid for the EventType or cannot be saved by the historian.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.GoodCommunicationEvent">
            <summary>
            The communication layer has raised an event.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.GoodShutdownEvent">
            <summary>
            The system is shutting down.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.GoodCallAgain">
            <summary>
            The operation is not finished and needs to be called again.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.GoodNonCriticalTimeout">
            <summary>
            A non-critical timeout occurred.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadInvalidArgument">
            <summary>
            One or more arguments are invalid.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadConnectionRejected">
            <summary>
            Could not establish a network connection to remote server.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadDisconnect">
            <summary>
            The server has disconnected from the client.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadConnectionClosed">
            <summary>
            The network connection has been closed.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadInvalidState">
            <summary>
            The operation cannot be completed because the object is closed, uninitialized or in some other invalid state.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadEndOfStream">
            <summary>
            Cannot move beyond end of the stream.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadNoDataAvailable">
            <summary>
            No data is currently available for reading from a non-blocking stream.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadWaitingForResponse">
            <summary>
            The asynchronous operation is waiting for a response.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadOperationAbandoned">
            <summary>
            The asynchronous operation was abandoned by the caller.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadExpectedStreamToBlock">
            <summary>
            The stream did not return all data requested (possibly because it is a non-blocking stream).
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadWouldBlock">
            <summary>
            Non blocking behaviour is required and the operation would block.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadSyntaxError">
            <summary>
            A value had an invalid syntax.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UACodeBits.BadMaxConnectionsReached">
            <summary>
            The operation could not be finished because all available connections are in use.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UACodeBits.FindCodeBits(System.String,System.Int32@)">
            <summary>
            Looks up a numeric value for symbolic string assigned to well-known code bits combination.
            </summary>
            <param name="symbolName">Symbol name for the code bits.</param>
            <param name="codeBits">Code bits that correspond to the symbol.</param>
            <returns><c>True</c> if the symbol has been found, and <c>codeBits</c> filled with corresponding value;
            <c>false</c> otherwise</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UACodeBits.FindSymbolName(System.Int32,System.String@)">
            <summary>
            Looks up a symbolic string assigned to well-known code bits combination.
            </summary>
            <param name="codeBits">Code bits to be looked up.</param>
            <param name="symbolName">Symbol name that corresponds to numerical value.</param>
            <returns><c>True</c> if there is a symbol name for the value, and <c>symbolName</c> has been filled with
            corresponding string; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UACodeBits.MakeString(System.Int32)">
            <summary>
            Expresses the code bits in a string.
            </summary>
            <param name="codeBits">Code bits to be expressed in a string.</param>
            <returns>Returns the symbol name for the code bits, if it exists. Otherwise, returns a hexadecimal representation
            of the value.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAQualifiedName">
            <summary>
            A name qualified by a namespace.
            </summary>
            <remarks>
            <para>The qualified name comprises of a namespace, and a text portion (a name). The qualified name is used, for example, 
            as BrowseName (e.g. in <see cref="P:OpcLabs.EasyOpc.UA.UANodeElement.BrowseName"/>).</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAQualifiedName.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAQualifiedName.#ctor(System.String)">
            <param name="expandedText">An expanded qualified name text (contains namespace URI, and namespace-relative 
            qualified name).
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAQualifiedName.#ctor(OpcLabs.EasyOpc.UA.UAQualifiedName)">
            <param name="qualifiedName">Qualified name object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAQualifiedName.op_Equality(OpcLabs.EasyOpc.UA.UAQualifiedName,OpcLabs.EasyOpc.UA.UAQualifiedName)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="qualifiedName1">First object to be compared.</param>
            <param name="qualifiedName2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAQualifiedName.op_Inequality(OpcLabs.EasyOpc.UA.UAQualifiedName,OpcLabs.EasyOpc.UA.UAQualifiedName)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="qualifiedName1">First object to be compared.</param>
            <param name="qualifiedName2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAQualifiedName.op_LessThan(OpcLabs.EasyOpc.UA.UAQualifiedName,OpcLabs.EasyOpc.UA.UAQualifiedName)">
            <summary>
            Determines whether one qualified name should be considered less than the second qualified name for ordering 
            purposes.
            </summary>
            <param name="value1">First object to be compared.</param>
            <param name="value2">Second object to be compared.</param>
            <returns><c>True</c> if the first value is less than the second value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAQualifiedName.op_GreaterThan(OpcLabs.EasyOpc.UA.UAQualifiedName,OpcLabs.EasyOpc.UA.UAQualifiedName)">
            <summary>
            Determines whether one qualified name should be considered greater than the second qualified name for ordering 
            purposes.
            </summary>
            <param name="value1">First object to be compared.</param>
            <param name="value2">Second object to be compared.</param>
            <returns><c>True</c> if the first value is greater than the seconds value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAQualifiedName.op_Implicit(System.String)~OpcLabs.EasyOpc.UA.UAQualifiedName">
            <summary>
            Converts a <see cref="T:System.String"/> to a qualified name.
            </summary>
            <param name="expandedText">The string to be converted.</param>
            <returns>For a non-null input, returns the qualified name with the given expanded text.
            Returns a qualified name with an empty expanded text if the input is <c>null</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAQualifiedName.op_Implicit(OpcLabs.EasyOpc.UA.UAQualifiedName)~System.String">
            <summary>
            Converts a qualified name to a string.
            </summary>
            <param name="qualifiedName">The qualified name to be converted.</param>
            <returns>Returns the expanded text of this qualified name.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAQualifiedName.CompareTo(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAQualifiedName.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current object.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAQualifiedName.Equals(OpcLabs.EasyOpc.UA.UAQualifiedName)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.UA.UAQualifiedName"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.UA.UANodeId"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAQualifiedName.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAQualifiedName.ToString">
            <summary>
            Returns a string that represents the current qualified name.
            </summary>
            <returns>Returns the expanded text of the qualified name.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAQualifiedName.ExpandedText">
            <summary>
            Expanded text of the qualified name.
            </summary>
            <remarks>
            We use a syntax similar to that of expanded node Ids, i.e. the namespace portion (absolute URL) is preceded by 
            "nsu=", and the namespace-relative part (which is always a string in qualified names) is preceded by "s=".
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAAttributeData">
            <summary>
            A class that stores the value of an attribute, together with status code and timestamps.
            </summary>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.Read.Overload1.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.Read.Overload1.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.Write.Overload1.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.Write.Overload1.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeData.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the class, with given value.
            </summary>
            <param name="value">The value of attribute data.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeData.#ctor(OpcLabs.EasyOpc.UA.UAAttributeData)">
            <summary>
            Initializes a new instance of the class, making a copy of an existing instance.
            </summary>
            <param name="attributeData">Attribute data to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeData.#ctor(OpcLabs.EasyOpc.UA.UAStatusCode)">
            <summary>
            Initializes a new instance of the class, with given status code.
            </summary>
            <param name="statusCode">The status code associated with the value.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeData.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAStatusCode)">
            <summary>
            Initializes a new instance of the class, with given value and status code.
            </summary>
            <param name="value">The value of attribute data.</param>
            <param name="statusCode">The status code associated with the value.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeData.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAStatusCode,System.DateTime)">
            <summary>
            Initializes a new instance of the class, with given value, status code and source timestamp.
            </summary>
            <param name="value">The value of attribute data.</param>
            <param name="statusCode">The status code associated with the value.</param>
            <param name="sourceTimestamp">The source timestamp associated with the value.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeData.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAStatusCode,System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the class, with given value, status code, source timestamp, and server timestamp.
            </summary>
            <param name="value">The value of attribute data.</param>
            <param name="statusCode">The status code associated with the value.</param>
            <param name="sourceTimestamp">The source timestamp associated with the value.</param>
            <param name="serverTimestamp">The server timestamp associated with the value.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeData.op_Equality(OpcLabs.EasyOpc.UA.UAAttributeData,OpcLabs.EasyOpc.UA.UAAttributeData)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="attributeData1">First object to be compared.</param>
            <param name="attributeData2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeData.op_Inequality(OpcLabs.EasyOpc.UA.UAAttributeData,OpcLabs.EasyOpc.UA.UAAttributeData)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="attributeData1">First object to be compared.</param>
            <param name="attributeData2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeData.DisplayValue">
            <summary>
            Returns a value of the attribute data, formatted for display purposes.
            </summary>
            <returns>An empty string if there is no value. A value converted to string otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeData.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeData.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeData.HasValue">
            <summary>
            Determines whether there is a valid value in the attribute data (depends on the status code).
            </summary>
            <returns>True if there is a valid value in the attribute data; false otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeData.IsBadStatus">
            <summary>
            Determines whether the status code is bad.
            </summary>
            <returns>Returns true if the status code is bad</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeData.IsGoodStatus">
            <summary>
            Determines whether the status code is good.
            </summary>
            <returns>Returns true if the status code is good.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeData.IsUncertainStatus">
            <summary>
            Determines whether the status code is uncertain.
            </summary>
            <returns>Returns true if the status code is uncertain.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeData.ToString">
            <summary>
            Converts the attribute data to a human readable string.
            </summary>
            <returns>The string that contains the <see cref="M:OpcLabs.EasyOpc.UA.UAAttributeData.DisplayValue"/>, value type, source and server timestamps,
            and the status code.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAAttributeData.ServerTimestamp">
            <summary>
            The server timestamp associated with the value.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAAttributeData.SourceTimestamp">
            <summary>
            The source timestamp associated with the value.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAAttributeData.StatusCode">
            <summary>
            The status code associated with the value.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAAttributeData.Value">
            <summary>
            The value of attribute data.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.OperationResult">
            <summary>Holds result of an operation.</summary>
            <example>
            <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.WriteMultipleValues.TestSuccess.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.WriteMultipleValues.TestSuccess.vb" lang="VBNET" region="Example"/>
            </example>
            <remarks>
            <para>The result is successful if the <see cref="P:OpcLabs.EasyOpc.UA.OperationResult.Exception"/> is a null reference. Otherwise, this 
            property contains information about the reason of the failure.</para>
            <para>The <see cref="T:OpcLabs.EasyOpc.UA.OperationResult"/> is a base class that does not contain any value for successful results.
            The derived classes add properties that contain such values.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.OperationResult.ThrowIfFailed">
            <summary>Throws <see cref="P:OpcLabs.EasyOpc.UA.OperationResult.Exception"/> if it is not a null reference.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.OperationResult.State">
            <summary>Gets or sets the arbitrary object associated with the operation.</summary>
            <remarks>
            <para>The <see cref="P:OpcLabs.EasyOpc.UA.OperationResult.State"/> object is valid independent of whether the operation have succeeded or failed. It is 
            a copy of the <see cref="P:OpcLabs.EasyOpc.UA.OperationArguments.State"/> object passed to the operation as its input. The semantics of 
            this value depends on the application.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.OperationResult.Exception">
            <summary>Gets or sets the information about the reason of the failure of the operation.</summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.OperationResult.Succeeded">
            <summary>
            Gets indication whether the operation have succeeded.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAAttributeArguments">
            <summary>
            Holds all arguments needed to specify a node together with its attribute in an OPC-UA server.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UANodeArguments">
            <summary>
            Holds all arguments needed to specify a node in an OPC-UA server.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.OperationArguments">
            <summary>Holds arguments of an operation.</summary>
            <remarks>
            <para>The <see cref="T:OpcLabs.EasyOpc.UA.OperationArguments"/> is a base class that does not contain any arguments besides a generic 
            <see cref="P:OpcLabs.EasyOpc.UA.OperationArguments.State"/> /// object. The derived classes add properties that contain such values.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.OperationArguments.#ctor">
            <remarks><para>The <see cref="P:OpcLabs.EasyOpc.UA.OperationArguments.State"/> will be set to a null reference.</para></remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.OperationArguments.#ctor(System.Object)">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            <summary>Initializes a new instance of the <see cref="T:OpcLabs.EasyOpc.UA.OperationArguments"/> class with the user-specified State 
            object.</summary>
            <param name="state">User-defined state object.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.OperationArguments.#ctor(OpcLabs.EasyOpc.UA.OperationArguments)">
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.UA.OperationArguments"/> object.</summary>
            <param name="args">Arguments to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.OperationArguments.op_Equality(OpcLabs.EasyOpc.UA.OperationArguments,OpcLabs.EasyOpc.UA.OperationArguments)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="operationArguments1">First object to be compared.</param>
            <param name="operationArguments2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.OperationArguments.op_Inequality(OpcLabs.EasyOpc.UA.OperationArguments,OpcLabs.EasyOpc.UA.OperationArguments)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="operationArguments1">First object to be compared.</param>
            <param name="operationArguments2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.OperationArguments.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current object.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.OperationArguments.Equals(OpcLabs.EasyOpc.UA.OperationArguments)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.UA.OperationArguments"/> are equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.UA.OperationArguments"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.OperationArguments.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.OperationArguments.State">
            <summary>
            Gets or sets the arbitrary object associated with the operation.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.#ctor">
            <overloads>
            Initializes a new instance of the class.
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAApplicationElement,OpcLabs.EasyOpc.UA.UANodeElement)">
            <param name="state">User-defined state object.</param>
            <param name="applicationElement">Application element object that provides information about the OPC-UA server.
            </param>
            <param name="nodeElement">Node element object that provides the Node Id.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId)">
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.#ctor(OpcLabs.EasyOpc.UA.OperationArguments)">
            <param name="operationArguments">Operation arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.#ctor(OpcLabs.EasyOpc.UA.OperationArguments,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId)">
            <param name="operationArguments">Operation arguments object to be copied from.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.#ctor(OpcLabs.EasyOpc.UA.UAApplicationElement,OpcLabs.EasyOpc.UA.UANodeElement)">
            <param name="applicationElement">Application element object that provides information about the OPC-UA server.
            </param>
            <param name="nodeElement">Node element object that provides the Node Id.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UANodeArguments.EndpointDescriptor">
            <summary>
            Contains the endpoint descriptor, i.e. the data defining a connection to the OPC-UA Server (mainly, its URL string).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UANodeArguments.NodeId">
            <summary>
            An identifier of a node in a server's address space.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeArguments.DefaultAttributeId">
            <summary>
            The attribute Id used when no attribute is specified. Contains the Id of the Value attribute.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UAAttributeId,OpcLabs.EasyOpc.UA.UAIndexRangeList)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <param name="indexRangeList">List of index ranges for individual array dimensions.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId)">
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UAAttributeId,OpcLabs.EasyOpc.UA.UAIndexRangeList)">
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <param name="indexRangeList">List of index ranges for individual array dimensions.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments)">
            <param name="attributeArguments">Attribute arguments object to copy from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments,OpcLabs.EasyOpc.UA.UAAttributeId,OpcLabs.EasyOpc.UA.UAIndexRangeList)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <param name="indexRangeList">List of index ranges for individual array dimensions.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAAttributeArguments.#ctor(OpcLabs.EasyOpc.UA.OperationArguments)">
            <param name="operationArguments">Operation arguments object to copy from.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAAttributeArguments.AttributeId">
            <summary>
            Attribute Id. Identifies an attribute of a node.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAAttributeArguments.IndexRangeList">
            <summary>
            List of index ranges for individual array dimensions.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAStatusCode">
            <summary>
            A status code that describes the result of a service or operation.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCode.#ctor">
             <overloads>
             <summary>
             Initializes a new instance of the class.
             </summary>
             </overloads>
             
            
             <summary>
             Initializes a new instance of the class, using a zero value ("Good").
             </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCode.#ctor(OpcLabs.EasyOpc.UA.UASeverity)">
            <summary>
            Initializes a new instance of the class, specifying the severity.
            </summary>
            <param name="severity">Indicates whether the StatusCode represents a good, bad or uncertain condition.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCode.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the class, specifying the code bits.
            </summary>
            <param name="codeBits">The code bits of the status code.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCode.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the class, specifying the code bits and flag bits.
            </summary>
            <param name="codeBits">The code bits of the status code.</param>
            <param name="flagBits">The flag bits of the status code.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCode.op_Equality(OpcLabs.EasyOpc.UA.UAStatusCode,OpcLabs.EasyOpc.UA.UAStatusCode)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="statusCode1">First object to be compared.</param>
            <param name="statusCode2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCode.op_Inequality(OpcLabs.EasyOpc.UA.UAStatusCode,OpcLabs.EasyOpc.UA.UAStatusCode)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="statusCode1">First object to be compared.</param>
            <param name="statusCode2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCode.op_Implicit(System.Int32)~OpcLabs.EasyOpc.UA.UAStatusCode">
            <summary>
            Converts code bits to a status code.
            </summary>
            <param name="codeBits">The code bits of the status code.</param>
            <returns>Returns the status code with specified code bits.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCode.op_Implicit(OpcLabs.EasyOpc.UA.UASeverity)~OpcLabs.EasyOpc.UA.UAStatusCode">
            <summary>
            Converts severity to a status code.
            </summary>
            <param name="severity">Indicates whether the StatusCode represents a good, bad or uncertain condition.</param>
            <returns>Returns the status code with specified severity.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCode.FromInt32(System.Int32)">
            <summary>
            Converts code bits to a status code.
            </summary>
            <param name="codeBits">The code bits of the status code.</param>
            <returns>Returns the status code with specified code bits.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCode.FromUASeverity(OpcLabs.EasyOpc.UA.UASeverity)">
            <summary>
            Converts severity to a status code.
            </summary>
            <param name="severity">Indicates whether the StatusCode represents a good, bad or uncertain condition.</param>
            <returns>Returns the status code with specified severity.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCode.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current object.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCode.Equals(OpcLabs.EasyOpc.UA.UAStatusCode)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.UA.UAStatusCode"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.UA.UAStatusCode"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCode.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the status code.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the status 
            code. </param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or 
            destination. </param>
            <remarks>
            <c>GetObjectData</c> sets a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with all the status code data targeted for 
            serialization. During deserialization, the status code is reconstituted from the <C>SerializationInfo</C> 
            transmitted over the stream.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCode.IsBad">
            <summary>
            Determines whether the status code is good.
            </summary>
            <returns>Returns true if the status code is bad.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCode.IsGood">
            <summary>
            Determines whether the status code is good.
            </summary>
            <returns>Returns true if the status code is good.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCode.IsUncertain">
            <summary>
            Determines whether the status code is uncertain.
            </summary>
            <returns>Returns true if the status code is uncertain.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCode.ToInt64">
            <summary>
            The numerical value of the status code.
            </summary>
            <returns>Returns the actual numerical value of the status code.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCode.ToString">
            <summary>
            Converts the various fields of a status code to a string.
            </summary>
            <returns>Returns the status code converted to a string.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAStatusCode.CodeBits">
            <summary>
            The code bits of the status code.
            </summary>
            <remarks>
            The <see cref="T:OpcLabs.EasyOpc.UA.UACodeBits"/> class contains constants and methods to help dealing with code bits.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAStatusCode.Condition">
            <summary>
            The condition code contained in the status code.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAStatusCode.FlagBits">
            <summary>
            The flag bits of the status code.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAStatusCode.HasDataValueInfo">
            <summary>
            Indicates that the status code contains info bits are associated with a data value returned from the Server.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAStatusCode.InfoType">
            <summary>
            The type of information contained in the info bits.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAStatusCode.LimitInfo">
            <summary>
            The limit bits associated with the data value.
            </summary>
            <remarks>
            This property can only be accessed when <see cref="P:OpcLabs.EasyOpc.UA.UAStatusCode.HasDataValueInfo"/> is <c>true</c>.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAStatusCode.Overflow">
            <summary>
            Indicates that not every detected change has been returned since the Server’s queue buffer for
            the MonitoredItem reached its limit and had to purge out data.
            </summary>
            <remarks>
            This property can only be accessed when <see cref="P:OpcLabs.EasyOpc.UA.UAStatusCode.HasDataValueInfo"/> is <c>true</c>.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAStatusCode.Severity">
            <summary>
            Indicates whether the StatusCode represents a good, bad or uncertain condition.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAStatusCode.SemanticsChanged">
            <summary>
            Indicates that the semantics of the associated data value have changed.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAStatusCode.StructureChanged">
            <summary>
            Indicates that the structure of the associated data value has changed since the last Notification.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAStatusCode.InternalValue">
            <summary>
            The numerical (integer) value of the status code.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UADataChangeFilter">
            <summary>
            Defines the conditions under which a data change notification should be reported.
            </summary>
            <remarks>
            DataChangeFilter:<br/>
            "The DataChangeFilter defines the conditions under which a data change notification should be
            reported and, optionally, a range or band for value changes where no DataChange Notification is
            generated. This range is called Deadband."<br/>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UADataChangeFilter.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UADataChangeFilter.#ctor(OpcLabs.EasyOpc.UA.UADataChangeTrigger)">
            <param name="dataChangeTrigger">The conditions under which a data change notification should be reported.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UADataChangeFilter.#ctor(OpcLabs.EasyOpc.UA.UADeadbandType,System.Double)">
            <param name="deadbandType">The Deadband type and behaviour.</param>
            <param name="deadbandValue">The numerical value of the deadband.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UADataChangeFilter.#ctor(OpcLabs.EasyOpc.UA.UADeadbandType,System.Double,OpcLabs.EasyOpc.UA.UADataChangeTrigger)">
            <param name="deadbandType">The Deadband type and behaviour.</param>
            <param name="deadbandValue">The numerical value of the deadband.</param>
            <param name="dataChangeTrigger">The conditions under which a data change notification should be reported.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UADataChangeFilter.#ctor(OpcLabs.EasyOpc.UA.UADataChangeFilter)">
            <param name="dataChangeFilter">The data change filter object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UADataChangeFilter.op_Equality(OpcLabs.EasyOpc.UA.UADataChangeFilter,OpcLabs.EasyOpc.UA.UADataChangeFilter)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="dataChangeFilter1">First object to be compared.</param>
            <param name="dataChangeFilter2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UADataChangeFilter.op_Inequality(OpcLabs.EasyOpc.UA.UADataChangeFilter,OpcLabs.EasyOpc.UA.UADataChangeFilter)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="dataChangeFilter1">First object to be compared.</param>
            <param name="dataChangeFilter2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UADataChangeFilter.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current object.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UADataChangeFilter.Equals(OpcLabs.EasyOpc.UA.UADataChangeFilter)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.UA.UADataChangeFilter"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.UA.UADataChangeFilter"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UADataChangeFilter.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UADataChangeFilter.DeadbandType">
            <summary>
            A value that defines the Deadband type and behaviour.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UADataChangeFilter.DeadbandValue">
            <summary>
            The value of absolute or percent deadband.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UADataChangeFilter.Trigger">
            <summary>
            Specifies the conditions under which a data change notification should be reported.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.OpcException">
            <summary>Exceptions arising from OPC operations.</summary>
            <remarks>
            In general, you cannot safely prevent these exceptions from happening. Various conditions external to your code
            can cause OPC failures, e.g. network problems, improper OPC server configuration, etc. For this reason, you should 
            always expect that an OPC operation can fail.
            </remarks>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.Write.Overload1.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.Write.Overload1.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAApplicationElementCollection">
            <summary>
            A collection of application elements (servers, <see cref="T:OpcLabs.EasyOpc.UA.UAApplicationElement"/>), keyed by their discovery URLs 
            (<see cref="P:OpcLabs.EasyOpc.UA.UAApplicationElement.DiscoveryUriString"/>).
            </summary>
            <example>
            <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.DiscoverServers.Main.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.DiscoverServers.Main.vb" lang="VBNET" region="Example"/>
            </example>
            <remarks>
            This collection is returned by the discovery methods.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAApplicationElementCollection.ContainsKey(System.String)">
            <summary>
            Determines whether the collection contains a specified key.
            </summary>
            <param name="key">The discovery URL to be located.</param>
            <returns><c>True</c> if the collection contains the specified key (server discovery URL); <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAApplicationElementCollection.GetKeyForItem(OpcLabs.EasyOpc.UA.UAApplicationElement)">
            <inheritdoc/>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAApplicationElementCollection.Keys">
            <summary>
            A collection of Discovery URI strings that are keys to the application elements in the dictionary.
            </summary>
            <returns>Returns a collection of keys (server discovery URLs). Returns null reference if the collection has not
            been yet allocated.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAReferenceTypeIds">
            <summary>
            A class that declares constants for Reference Types in the Model Design.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.Aggregates">
            <summary>
            The identifier for the Aggregates ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.AlwaysGeneratesEvent">
            <summary>
            The identifier for the AlwaysGeneratesEvent ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.FromState">
            <summary>
            The identifier for the FromState ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.GeneratesEvent">
            <summary>
            The identifier for the GeneratesEvent ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HasCause">
            <summary>
            The identifier for the HasCause ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HasChild">
            <summary>
            The identifier for the HasChild ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HasComponent">
            <summary>
            The identifier for the HasComponent ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HasCondition">
            <summary>
            The identifier for the HasCondition ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HasDescription">
            <summary>
            The identifier for the HasDescription ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HasEffect">
            <summary>
            The identifier for the HasEffect ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HasEncoding">
            <summary>
            The identifier for the HasEncoding ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HasEventHistory">
            <summary>
            The identifier for the HasEventHistory ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HasEventSource">
            <summary>
            The identifier for the HasEventSource ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HasFalseSubState">
            <summary>
            The identifier for the HasFalseSubState ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HasHistoricalConfiguration">
            <summary>
            The identifier for the HasHistoricalConfiguration ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HasModellingRule">
            <summary>
            The identifier for the HasModellingRule ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HasModelParent">
            <summary>
            The identifier for the HasModelParent ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HasNotifier">
            <summary>
            The identifier for the HasNotifier ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HasOrderedComponent">
            <summary>
            The identifier for the HasOrderedComponent ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HasProperty">
            <summary>
            The identifier for the HasProperty ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HasSubStateMachine">
            <summary>
            The identifier for the HasSubStateMachine ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HasSubtype">
            <summary>
            The identifier for the HasSubtype ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HasTrueSubState">
            <summary>
            The identifier for the HasTrueSubState ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HasTypeDefinition">
            <summary>
            The identifier for the HasTypeDefinition ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.HierarchicalReferences">
            <summary>
            The identifier for the HierarchicalReferences ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.NonHierarchicalReferences">
            <summary>
            The identifier for the NonHierarchicalReferences ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.Organizes">
            <summary>
            The identifier for the Organizes ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.References">
            <summary>
            The identifier for the References ReferenceType.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReferenceTypeIds.ToState">
            <summary>
            The identifier for the ToState ReferenceType.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAClientSessionParameters">
            <summary>
            Contains parameters that influence the behavior of the component on the session level.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAClientSessionParameters.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAClientSessionParameters.#ctor(OpcLabs.EasyOpc.UA.UAClientSessionParameters)">
            <param name="clientSessionParameters">Parameters object to be copied from.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientSessionParameters.CloseTimeout">
            <summary>
            A timeout for closing the session (in milliseconds).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientSessionParameters.EndpointSelectionPolicy">
            <summary>
            Determines how the UA client chooses the endpoint from the endpoints provided by the UA server.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientSessionParameters.KeepAliveInterval">
            <summary>
            How frequently the server is pinged to see if communication is still working (in milliseconds).
            </summary>
            <value>Frequency in milliseconds, or <see cref="F:System.Threading.Timeout.Infinite"/> to disable the keep
            alive monitoring.</value>
            <remarks>
            This interval controls (but does not directly mean) how much time elapses before a communication error is detected.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientSessionParameters.RetrialDelay">
            <summary>
            A delay before the component will try to reconnect the session, if it failed to connect it previously, or a serious
            failure occured related to the session (in milliseconds).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientSessionParameters.SelectBestEndpoint">
            <summary>
            Determines whether the component will automatically attempt to select the best endpoint.
            </summary>
            <remarks>
            <para>
            The endpoint is selected using the <see cref="P:OpcLabs.EasyOpc.UA.UAClientSessionParameters.EndpointSelectionPolicy"/>.</para>
            <para>
            This property should always be 'true' in the current version, because it is not yet possible to specify
            all endpoint parameters directly.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientSessionParameters.Timeout">
            <summary>
            A session timeout (in milliseconds).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientSessionParameters.UpdateEndpointBeforeConnect">
            <summary>
            Determines whether to update the endpoint description with information from the server's discovery endpoint
            before the session is connected.
            </summary>
            <remarks>This property should always be 'false' in the current version, because the fully qualified endpoints
            can only come from discovery.</remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments">
            <summary>
            Contains arguments describing how the monitoring item subscription should be changed.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.HandleArguments">
            <summary>Holds an integer handle as an argument to some operation.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.HandleArguments.#ctor(OpcLabs.EasyOpc.UA.HandleArguments)">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            <summary>
            <summary>Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.UA.HandleArguments"/> object.</summary>
            </summary>
            <param name="handleArguments">Arguments to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.HandleArguments.#ctor(System.Int32)">
            <summary>Initializes a new instance of the class with the specified handle value.</summary>
            <param name="handle">Integer handle that is an argument to the operation.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.HandleArguments.#ctor(System.Int32,System.Object)">
            <summary>Initializes a new instance of the class with the specified handle value, and a user-defined state object.
            </summary>
            <param name="handle">Integer handle that is an argument to the operation.</param>
            <param name="state">User-defined state object.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.HandleArguments.#ctor(OpcLabs.EasyOpc.UA.OperationArguments)">
            <summary>
            Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.UA.HandleArguments"/> object from the <see cref="T:OpcLabs.EasyOpc.UA.OperationArguments"/> 
            object.
            </summary>
            <param name="operationArguments">Arguments to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.HandleArguments.#ctor(OpcLabs.EasyOpc.UA.OperationArguments,System.Int32)">
            <summary>
            Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.UA.HandleArguments"/> object from the <see cref="T:OpcLabs.EasyOpc.UA.OperationArguments"/> object,
            and specified handle value.
            </summary>
            <param name="operationArguments">Arguments to be copied from.</param>
            <param name="handle">Integer handle that is an argument to the operation.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.HandleArguments.Handle">
            <summary>Gets or sets the integer handle that is an argument to the operation.</summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.#ctor(OpcLabs.EasyOpc.UA.OperationArguments)">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
            <summary>
            Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments"/> object from the 
            <see cref="T:OpcLabs.EasyOpc.UA.OperationArguments"/> object.
            </summary>
            <param name="operationArguments">Arguments to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.#ctor(OpcLabs.EasyOpc.UA.HandleArguments)">
            <summary>
            Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments"/> object from the 
            <see cref="T:OpcLabs.EasyOpc.UA.HandleArguments"/>.
            </summary>
            <param name="handleArguments">Arguments to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.#ctor(OpcLabs.EasyOpc.UA.HandleArguments,OpcLabs.EasyOpc.UA.UAMonitoringParameters,OpcLabs.EasyOpc.UA.UASubscriptionParameters)">
            <summary>
            Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments"/> object from the 
            <see cref="T:OpcLabs.EasyOpc.UA.HandleArguments"/>, monitoring parameters, and subscription parameters.
            </summary>
            <param name="handleArguments"><see cref="T:OpcLabs.EasyOpc.UA.HandleArguments"/> to be copied from.</param>
            <param name="monitoringParameters">Contains new monitoring parameters (such as the sampling interval, and optional 
            data change filter).</param>
            <param name="subscriptionParameters">Contains new subscription parameters (such as the publishing interval).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.#ctor(System.Int32,OpcLabs.EasyOpc.UA.UAMonitoringParameters,OpcLabs.EasyOpc.UA.UASubscriptionParameters)">
            <summary>
            Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments"/> object from the 
            monitoring item handle, monitoring parameters, and subscription parameters.
            </summary>
            <param name="handle">Contains handle of the monitored item to be affected.</param>
            <param name="monitoringParameters">Contains new monitoring parameters (such as the sampling interval, and optional 
            data change filter).</param>
            <param name="subscriptionParameters">Contains new subscription parameters (such as the publishing interval).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.#ctor(System.Int32,OpcLabs.EasyOpc.UA.UAMonitoringParameters)">
            <summary>
            Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments"/> object from the 
            monitoring item handle, and monitoring parameters.
            </summary>
            <param name="handle">Contains handle of the monitored item to be affected.</param>
            <param name="monitoringParameters">Contains new monitoring parameters (such as the sampling interval, and optional 
            data change filter).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.#ctor(OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments)">
            <summary>
            Initializes a new copy of the <see cref="T:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments"/> object from an existing instance.
            </summary>
            <param name="subscriptionChangeArguments">Arguments to be copied from.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.SubscriptionParameters">
            <summary>
            Contains new subscription parameters (such as the publishing interval).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUASubscriptionChangeArguments.MonitoringParameters">
            <summary>
            Contains new monitoring parameters (such as the sampling interval, and optional data change filter).
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAClientLib.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientLib.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientLib.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientLib.Resource1.UAClientEngine_CouldNotRetrieveInternalApplicationConfigurationStream">
            <summary>
              Looks up a localized string similar to Could not retrieve internal application configuration stream..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientLib.Resource1.UAClientEngine_OpcOperationFailure">
            <summary>
              Looks up a localized string similar to OPC operation failure. For more details, see the inner exception, of type &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientLib.Resource1.UAClientEngineBase_SdkApplicationConfigurationTypeMismatch">
            <summary>
              Looks up a localized string similar to SDK application configuration type mismatch.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientLib.Resource1.UAClientSession_CannotMakeNodeIdNotConnected">
            <summary>
              Looks up a localized string similar to Cannot make NodeId because the session is not connected..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientLib.Resource1.UAClientSession_CannotMakeQualifiedNameNotConnected">
            <summary>
              Looks up a localized string similar to Cannot make QualifiedName because the session is not connected..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientLib.Resource1.UAClientSession_ClientEngineNotConnected">
            <summary>
              Looks up a localized string similar to Client engine is not connected..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientLib.Resource1.UAClientSession_DataValueNotProvided">
            <summary>
              Looks up a localized string similar to The server has not provided data value..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientLib.Resource1.UAClientSubscription_ClientSessionNotConnected">
            <summary>
              Looks up a localized string similar to Client session is not connected..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientLib.Resource1.UAEngine_AddSession_SessionInEngine">
            <summary>
              Looks up a localized string similar to Cannot add session that is already in some engine..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientLib.Resource1.UAEngine_RemoveSession_SessionNotInEngine">
            <summary>
              Looks up a localized string similar to Cannot remove session that is not in this engine..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientLib.Resource1.UAServiceException_MakeMessage_Remarks">
            <summary>
              Looks up a localized string similar to ---- REMARKS ----.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientLib.Resource1.UAServiceException_MakeMessage_ServiceResult">
            <summary>
              Looks up a localized string similar to ---- SERVICE RESULT ----.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientLib.Resource1.UAServiceException_Remarks_BadCertificateUntrusted">
            <summary>
              Looks up a localized string similar to One reason for this error could be that the server certificate is not trusted by the client. The error can be resolved by properly configuring the certificate trusts. For development and testing purposes, or if your application does not require the server certificate check, you can set EasyUAClient.EngineParameters.CertificateAcceptancePolicy.AcceptAnyCertificate = true in your application to bypass the server certificate check on the client side, or (a bit safer), include the endpoint URL of your server in [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientLib.Resource1.UAServiceException_ServiceResultMessage">
            <summary>
              Looks up a localized string similar to An error specific to OPC-UA service occurred..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientLib.Resource1.UASession_AddSubscription_SubscriptionInSession">
            <summary>
              Looks up a localized string similar to Cannot add subscription that is already in some session..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientLib.Resource1.UASession_RemoveSubscription_SubscriptionNotInSession">
            <summary>
              Looks up a localized string similar to Cannot remove subscription that is not in this session..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientLib.Resource1.UASubscription_AddMonitoredItem_MonitoredItemInSubscription">
            <summary>
              Looks up a localized string similar to Cannot add monitored item that is already in some subscription..
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientLib.Resource1.UASubscription_RemoveMonitoredItem_MonitoredItemNotInSubscription">
            <summary>
              Looks up a localized string similar to Cannot remove monitored item that is not in this subscription..
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.EasyUAClientExtension">
            <summary>
            Contains extension methods to <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> class.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClientExtension.TraverseNodeTree(OpcLabs.EasyOpc.UA.EasyUAClient,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId)">
            <summary>
            Allows to traverse through address space data nodes under the specified node.
            </summary>
            <param name="easyUAClient">The client object that will perform the operation.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <returns>Returns an enumerator of tree positions that will traverse through all nodes specified.</returns>
            <remarks>
            <para>
            Performs a breadth-first traversal.</para>
            <para>
            The root position in a tree will correspond to the specified starting node. The <see cref="T:OpcLabs.EasyOpc.UA.UATreePosition"/>
            object for the root is special one, in that from its <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> properties, only its NodeId 
            is filled in.</para>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAClientExtension.TraverseNodeTree(OpcLabs.EasyOpc.UA.EasyUAClient,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UABrowseParameters)">
            <summary>
            Allows to traverse through address space nodes under the specified node, using given browse parameters.
            </summary>
            <param name="easyUAClient">The client object that will perform the operation.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="browseParameters">Browse parameters such as node classes and reference types to be returned.</param>
            <returns>Returns an enumerator of tree positions that will traverse through all nodes specified.</returns>
            <remarks>
            <para>
            Performs a breadth-first traversal.</para>
            <para>
            The root position in a tree will correspond to the specified starting node. The <see cref="T:OpcLabs.EasyOpc.UA.UATreePosition"/>
            object for the root is special one, in that from its <see cref="T:OpcLabs.EasyOpc.UA.UANodeElement"/> properties, only its NodeId 
            is filled in.</para>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAApplicationType">
            <summary>
            The type of application.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAApplicationType.Server">
            <summary>
            An application that is a Server.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAApplicationType.Client">
            <summary>
            An application that is a Client.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAApplicationType.ClientAndServer">
            <summary>
            An application that is both a Client and a Server.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAApplicationType.DiscoveryServer">
            <summary>
            An application that is a Discovery Server.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAClientMonitoredItemParameters">
            <summary>
            Contains parameters that influence the behavior of the component on the monitored item level.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAClientMonitoredItemParameters.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAClientMonitoredItemParameters.#ctor(OpcLabs.EasyOpc.UA.UAClientMonitoredItemParameters)">
            <param name="clientMonitoredItemParameters">The client monitored item parameters object to be copied from.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientMonitoredItemParameters.RetrialDelay">
            <summary>
            A delay before the component will try to recreate the monitored item, if it failed to create it previously, or 
            a serious failure occured related to the monitored item (in milliseconds).
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAInfoType">
            <summary>
            The type of information contained in the info bits of status code (<see cref="T:OpcLabs.EasyOpc.UA.UAStatusCode"/>).
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAInfoType.NotUsed">
            <summary>
            The info bits are not used.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAInfoType.DataValue">
            <summary>
            The StatusCode and its info bits are associated with a data value returned from the Server.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAServiceResult">
            <summary>
            The service result combines the status code and diagnostic information.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAServiceResult.ToString">
            <summary>
            Converts the value to a human readable string.
            </summary>
            <returns>A string representation of the current service result.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAServiceResult.AdditionalInfo">
            <summary>
            Additional diagnostic/debugging information associated with the operation.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAServiceResult.Description">
            <summary>
            The localized description for the status code.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAServiceResult.InnerResult">
            <summary>
            Nested error information.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAServiceResult.QualifiedSymbolicId">
            <summary>
            The qualified name of the symbolic identifier associated with the status code.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAServiceResult.Text">
            <summary>
            Returns a formatted string with the contents of the service result.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAServiceResult.StatusCode">
            <summary>
            The status code associated with the service result.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UADeadbandType">
            <summary>
            A value that defines the Deadband type and behaviour.
            </summary>
            <remarks>
            "Deadband is a permitted range for value changes that will not trigger a data change Notification."
            <br/>
            "Deadband can be applied as a filter when subscribing to Variables and is used to keep noisy
            signals from updating the Client unnecessarily"
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UADeadbandType.None">
            <summary>
            No Deadband calculation should be applied.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UADeadbandType.Absolute">
            <summary>
            Absolute Deadband.
            </summary>
            <remarks>
            "
            <br/>
            For this type the deadbandValue contains the absolute change in a data value that shall cause a Notification to be 
            generated. This parameter applies only to Variables with any number data type.
            <br/>
            An exception that causes a DataChange Notification based on an AbsoluteDeadband is determined as follows:
            <br/>
            Exception if (absolute value of (last cached value - current value) > AbsoluteDeadband)
            <br/>
            The last cached value is defined as the most recent value previously sent to the Notification channel.
            <br/>If the item is an array of values, the entire array is returned if any array element exceeds the 
            /// AbsoluteDeadband.
            <br/>
            "
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UADeadbandType.Percent">
            <summary>
            Percent Deadband.
            </summary>
            <remarks>
            "
            <br/>
            For this type of deadband the deadbandValue is defined as the percentage of the EURange. That is, it applies only to
            AnalogItems with an EURange Property that defines the typical value range for the item. This range shall be 
            multiplied with the deadbandValue to generate an exception limit. An exception is determined as follows:
            <br/>
            Exception if (absolute value of (last cached value - current value) > (deadbandValue/100.0) * ((high–low) of 
            EURange)))
            <br/>
            If the item is an array of values and any array element exceeds the deadbandValue, the entire monitored array is 
            returned.
            <br/>
            "
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAApplicationElement">
            <summary>
            Contains information gathered about an OPC application (typically, an OPC-UA server).
            </summary>
            <example>
            <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.DiscoverServers.Main.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.DiscoverServers.Main.vb" lang="VBNET" region="Example"/>
            </example>
            <remarks>This object is filled in and returned e.g. when you discover the OPC servers by 
            <see cref="M:OpcLabs.EasyOpc.UA.EasyUAClient.DiscoverServers"/> method.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAApplicationElement.op_Implicit(OpcLabs.EasyOpc.UA.UAApplicationElement)~OpcLabs.EasyOpc.UA.UAEndpointDescriptor">
            <summary>
            Converts a <see cref="T:OpcLabs.EasyOpc.UA.UAApplicationElement"/> to an endpoint descriptor.
            </summary>
            <param name="applicationElement">The application element to be converted.</param>
            <returns>For a non-null input, returns the endpoint descriptor that corresponds to the discovery URL of
            the application element. Returns <c>null</c> if the input is <c>null</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAApplicationElement.ToUAEndpointDescriptor">
            <summary>
            Converts an application element returned by discovery to a <see cref="T:OpcLabs.EasyOpc.UA.UAEndpointDescriptor"/>.
            </summary>
            <returns>Returns an endpoint descriptor that can be used for connecting to the OPC server.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAApplicationElement.DiscoveryUriString">
            <summary>
            The URL that can be used to reach the application, using discovery.
            </summary>
            <remarks>
            <para>
            This value can be used as <see cref="P:OpcLabs.EasyOpc.UA.UAEndpointDescriptor.EndpointUrlString"/>.</para>
            <para>
            A generic string is used instead of <see cref="T:System.Uri"/>, because in some cases, the value may not represent
            a real URI.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAApplicationElement.ApplicationName">
            <summary>
            A descriptive name for the the application (not necessarily unique).
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAApplicationElement.ApplicationType">
            <summary>
            The type of application.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAApplicationElement.ApplicationUriString">
            <summary>
            A unique identifier for the application instance.
            </summary>
            <remarks>
            <para>
            A generic string is used instead of <see cref="T:System.Uri"/>, because in some cases, the value may not represent
            a real URI.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAApplicationElement.DiscoveryProfileUriString">
            <summary>
            A URI that identifies the discovery profile supported by the URLs provided.
            </summary>
            <remarks>
            <para>
            A generic string is used instead of <see cref="T:System.Uri"/>, because in some cases, the value may not represent
            a real URI.</para>
            <para>
            discoveryProfileUri:<br/>
            "This field is not used if the applicationType is CLIENT_1. If this value is not specified then the Endpoints shall 
            support the Discovery Services..."
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAApplicationElement.GatewayServerUriString">
            <summary>
            The URI of the Gateway Server.
            </summary>
            <remarks>
            <para>
            A generic string is used instead of <see cref="T:System.Uri"/>, because in some cases, the value may not represent
            a real URI.</para>
            <para>
            gatewayServerUri:<br/>
            "The URI of the Gateway Server associated with the discoveryUrls. This value is only specified by Gateway Servers 
            that wish to register the Servers that they provide access to. For Servers that do not act as a Gateway Server this 
            parameter shall be null."
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAApplicationElement.ProductUriString">
            <summary>
            A unique identifier for the product.
            </summary>
            <remarks>
            <para>
            A generic string is used instead of <see cref="T:System.Uri"/>, because in some cases, the value may not represent
            a real URI.</para>
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UABrowseParameters">
            <summary>
            Specifies which nodes will be returned by browsing the OPC server's address space.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UABrowseParameters.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UABrowseParameters.#ctor(OpcLabs.EasyOpc.UA.UABrowseParameters)">
            <param name="browseParameters">Browse parameters object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UABrowseParameters.#ctor(OpcLabs.EasyOpc.UA.UANodeClass)">
            <param name="nodeClasses">Specifies which node classes will be returned by the browsing.</param>
            <remarks>No reference types are set by this overload. You will need to set the <see cref="P:OpcLabs.EasyOpc.UA.UABrowseParameters.ReferenceTypeIds"/>
            property.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UABrowseParameters.#ctor(OpcLabs.EasyOpc.UA.UANodeClass,System.Collections.Generic.IEnumerable{OpcLabs.EasyOpc.UA.UANodeId})">
            <param name="nodeClasses">Specifies which node classes will be returned by the browsing.</param>
            <param name="referenceTypeIds">Specifies which reference types will be returned by the browsing.</param>
            <remarks>
            You can use the constants from <see cref="T:OpcLabs.EasyOpc.UA.UAReferenceTypeIds"/> to construct the set of reference types.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UABrowseParameters.CombineWith(OpcLabs.EasyOpc.UA.UABrowseParameters)">
            <summary>
            Combines given browse parameters with current browse parameters.
            </summary>
            <param name="other">The browse parameters to be combined with the current browse parameters.</param>
            <remarks>Be aware that combining the browse parameters does not always produce a precise "union". The union 
            operation works separately on each member of browse parameters, therefore the browse parameters resulting from
            combining may be "wider" than what a proper union would yield.</remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UABrowseParameters.DataNodes">
            <summary>
            Parameters used for browsing the data nodes, i.e. Objects, Variables, and Properties in the address space.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UABrowseParameters.Objects">
            <summary>
            Parameters used for browsing the Objects in the address space.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UABrowseParameters.Properties">
            <summary>
            Parameters used for browsing the Properties in the address space.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UABrowseParameters.Variables">
            <summary>
            Parameters used for browsing the Variables in the address space.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UABrowseParameters.NodeClasses">
            <summary>
            Specifies which node classes will be returned by the browsing.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UABrowseParameters.ReferenceTypeIds">
            <summary>
            Specifies which node classes will be returned by the browsing.
            </summary>
            <remarks>
            You can use the constants from <see cref="T:OpcLabs.EasyOpc.UA.UAReferenceTypeIds"/> to construct the set of reference types.
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.LicensingException">
            <summary>
            An exception that indicates a problem with the license.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAAttributeDataResult">
            <summary>
            <summary>Holds result of a Read operation, i.e. the data obtained for an attribute of a node in OPC Server's
            address space.</summary>
            </summary>
            <example>
            <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.ReadMultiple.Main.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.ReadMultiple.Main.vb" lang="VBNET" region="Example"/>
            </example>
            <remarks>
            <para>The result is successful if the <see cref="P:OpcLabs.EasyOpc.UA.OperationResult.Exception"/> is a null reference. Otherwise, this 
            property contains information about the reason of the failure.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAAttributeDataResult.AttributeData">
            <summary>
            Attribute data: the value of an attribute, together with status code and timestamps.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments">
            <summary>
            Holds all arguments needed to subscribe to a monitored item in an OPC-UA server.
            </summary>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.SubscribeMultipleMonitoredItems.Overload1.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.SubscribeMultipleMonitoredItems.Overload1.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.GetMonitoredItemArguments.Main.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.GetMonitoredItemArguments.Main.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.GetMonitoredItemArgumentsDictionary.Main.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.GetMonitoredItemArgumentsDictionary.Main.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor">
            <overloads>
            Initializes a new instance of the class.
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(System.EventHandler{OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs},System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UAMonitoringParameters,OpcLabs.EasyOpc.UA.UASubscriptionParameters)">
            <param name="callback">A callback method to be invoked for each significant monitored item change.</param>
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="monitoringParameters">Contains monitoring parameters (such as the sampling interval, and optional 
            	data change filter).</param>
            <param name="subscriptionParameters">Contains subscription parameters (such as the publishing interval).</param>
            <remarks>
            <para>
            If <paramref name="callback"/> is a null reference, only the 
            <see cref="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged"/> event is generated, and no callback method is invoked.</para>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(System.EventHandler{OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs},System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UAMonitoringParameters)">
            <param name="callback">A callback method to be invoked for each significant monitored item change.</param>
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="monitoringParameters">Contains monitoring parameters (such as the sampling interval, and optional 
            	data change filter).</param>
            <remarks>
            <para>If <paramref name="callback"/> is a null reference, only the 
            <see cref="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged"/> event is generated, and no callback method is invoked.</para>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(System.EventHandler{OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs},System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId)">
            <param name="callback">A callback method to be invoked for each significant monitored item change.</param>
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>If <paramref name="callback"/> is a null reference, only the 
            <see cref="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged"/> event is generated, and no callback method is invoked.</para>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UAMonitoringParameters,OpcLabs.EasyOpc.UA.UASubscriptionParameters)">
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="monitoringParameters">Contains monitoring parameters (such as the sampling interval, and optional 
            	data change filter).</param>
            <param name="subscriptionParameters">Contains subscription parameters (such as the publishing interval).</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UAMonitoringParameters)">
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="monitoringParameters">Contains monitoring parameters (such as the sampling interval, and optional 
            	data change filter).</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(System.Object,OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId)">
            <param name="state">User-defined state object.</param>
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(OpcLabs.EasyOpc.UA.OperationArguments)">
            <param name="operationArguments">Operation arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments,OpcLabs.EasyOpc.UA.UASubscriptionParameters,OpcLabs.EasyOpc.UA.UAMonitoringParameters)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
            <param name="subscriptionParameters">Contains subscription parameters (such as the publishing interval).</param>
            <param name="monitoringParameters">Contains monitoring parameters (such as the sampling interval, and optional 
            data change filter).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments)">
            <param name="monitoredItemArguments">Monitored item arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.Callback">
            <summary>A callback method to be invoked for each significant monitored item change.</summary>
            <value>If this is a null reference, only the <see cref="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged"/> 
            event is generated, and no callback method is invoked.</value>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.SubscriptionParameters">
            <summary>
            Contains subscription parameters (such as the publishing interval).
            </summary>
            <returns>Returns the subscription parameters object.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArguments.MonitoringParameters">
            <summary>
            Contains monitoring parameters (such as the sampling interval, and optional 
            data change filter).
            </summary>
            <returns>Returns the monitoring parameters object.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAWriteValueArguments">
            <summary>
            Holds all arguments needed to write a value into an OPC-UA server.
            </summary>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.WriteMultipleValues.TestSuccess.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.WriteMultipleValues.TestSuccess.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAWriteValueArguments.DefaultTypeCode">
            <summary>
            The default type that is used when writing the value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor">
            <overloads>
            Initializes a new instance of the class.
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.OperationArguments)">
            <param name="operationArguments">Operation arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments,System.Object)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments,System.Object,System.TypeCode)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
            <param name="value">The value to be written.</param>
            <param name="typeCode">Specifies the type that should be used when writing the value.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,System.Object)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="value">The value to be written.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,System.Object,System.TypeCode)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="value">The value to be written.</param>
            <param name="typeCode">Specifies the type that should be used when writing the value.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,System.Object,System.TypeCode,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="value">The value to be written.</param>
            <param name="typeCode">Specifies the type that should be used when writing the value.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,System.Object,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="value">The value to be written.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments,System.Object,System.TypeCode)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="value">The value to be written.</param>
            <param name="typeCode">Specifies the type that should be used when writing the value.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments,System.Object,System.TypeCode,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="value">The value to be written.</param>
            <param name="typeCode">Specifies the type that should be used when writing the value.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteValueArguments.#ctor(OpcLabs.EasyOpc.UA.UAWriteValueArguments)">
            <param name="writeValueArguments">Write value arguments object to be copied from.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAWriteValueArguments.Value">
            <summary>
            The value to be written.
            </summary>
            <returns>The value to be written.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAWriteValueArguments.TypeCode">
            <summary>
            Specifies the type that should be used when writing the value.
            </summary>
            <returns>The type that should be used when writing the value.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.EasyUASubscriptionParameters">
            <summary>
            Contains subscription parameters (such as the publishing interval).
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UASubscriptionParameters">
            <summary>
            Contains subscription parameters (such as the publishing interval).
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UASubscriptionParameters.#ctor">
            <overloads>
            Initializes a new instance of the class.
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UASubscriptionParameters.#ctor(System.Int32)">
            <param name="publishingInterval">The publishing interval (in milliseconds). Defines the cyclic rate that the 
            Subscription is requested to return Notifications to the Client.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UASubscriptionParameters.#ctor(System.Int32,System.Byte)">
            <param name="publishingInterval">The publishing interval (in milliseconds). Defines the cyclic rate that the 
            Subscription is requested to return Notifications to the Client.</param>
            <param name="priority">Indicates the relative priority of the Subscription.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UASubscriptionParameters.#ctor(OpcLabs.EasyOpc.UA.UASubscriptionParameters)">
            <param name="subscriptionParameters">Contains subscription parameters (such as the publishing interval).</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UASubscriptionParameters.op_Equality(OpcLabs.EasyOpc.UA.UASubscriptionParameters,OpcLabs.EasyOpc.UA.UASubscriptionParameters)">
            <summary>
            <summary>Determines whether the two objects are equal.</summary>
            </summary>
            <param name="subscriptionParameters1">First object to be compared.</param>
            <param name="subscriptionParameters2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UASubscriptionParameters.op_Inequality(OpcLabs.EasyOpc.UA.UASubscriptionParameters,OpcLabs.EasyOpc.UA.UASubscriptionParameters)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="subscriptionParameters1">First object to be compared.</param>
            <param name="subscriptionParameters2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UASubscriptionParameters.op_Implicit(System.Int32)~OpcLabs.EasyOpc.UA.UASubscriptionParameters">
            <summary>
            Converts a publishing interval to subscription parameters object.
            </summary>
            <param name="publishingInterval">The publishing interval (in milliseconds). Defines the cyclic rate that the 
            Subscription is requested to return Notifications to the Client.</param>
            <returns>Returns the subscription parameters object with the specified publishing interval.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UASubscriptionParameters.FromInt32(System.Int32)">
            <summary>
            Converts a publishing interval to subscription parameters object.
            </summary>
            <param name="publishingInterval">The publishing interval (in milliseconds). Defines the cyclic rate that the 
            Subscription is requested to return Notifications to the Client.</param>
            <returns>Returns the subscription parameters object with the specified publishing interval.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UASubscriptionParameters.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current object.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UASubscriptionParameters.Equals(OpcLabs.EasyOpc.UA.UASubscriptionParameters)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.UA.UASubscriptionParameters"/> are equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.UA.UASubscriptionParameters"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UASubscriptionParameters.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UASubscriptionParameters.Priority">
            <summary>
            Indicates the relative priority of the Subscription.
            </summary>
            <returns>Returns the relative priority.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UASubscriptionParameters.PublishingInterval">
            <summary>
            The publishing interval (in milliseconds). Defines the cyclic rate that the 
            Subscription is requested to return Notifications to the Client.
            </summary>
            <returns>Retruens the publishing interval (in milliseconds).</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionParameters.#ctor">
            <overloads>
            Initializes a new instance of the class.
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionParameters.#ctor(System.Int32)">
            <param name="publishingInterval">The publishing interval (in milliseconds). Defines the cyclic rate that the 
            Subscription is requested to return Notifications to the Client.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionParameters.#ctor(System.Int32,System.Byte)">
            <param name="publishingInterval">The publishing interval (in milliseconds). Defines the cyclic rate that the 
            Subscription is requested to return Notifications to the Client.</param>
            <param name="priority">Indicates the relative priority of the Subscription.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUASubscriptionParameters.#ctor(OpcLabs.EasyOpc.UA.UASubscriptionParameters)">
            <param name="subscriptionParameters">Contains subscription parameters (such as the publishing interval).</param>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAClientSubscriptionParameters">
            <summary>
            Contains parameters that influence the behavior of the component on the subscription level.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAClientSubscriptionParameters.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAClientSubscriptionParameters.#ctor(OpcLabs.EasyOpc.UA.UAClientSubscriptionParameters)">
            <param name="clientSubscriptionParameters">Parameters object to be copied from.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAClientSubscriptionParameters.RetrialDelay">
            <summary>
            A delay before the component will try to recreate the subscription, if it failed to create it previously, or 
            a serious failure occured related to the subscription (in milliseconds).
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UALimitInfo">
            <summary>
            Flags that are set to indicate the limit status of the value.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UALimitInfo.None">
            <summary>
            The value is free to change.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UALimitInfo.Low">
            <summary>
            The value is at the lower limit for the data source.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UALimitInfo.High">
            <summary>
            The value is at the higher limit for the data source.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UALimitInfo.Constant">
            <summary>
            The value is constant and cannot change.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UASeverity">
            <summary>
            Defines severity codes.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UASeverity.GoodOrSuccess">
            <summary>
            The operation completed successfully.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UASeverity.UncertainOrWarning">
            <summary>
            The operation completed however its outputs may not be usable.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UASeverity.BadOrFailure">
            <summary>
            The operation failed.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAConfigurationSource">
            <summary>
            Determines the source of the UA configuration.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAConfigurationSource.None">
            <summary>
            The UA configuration is created with default values only.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAConfigurationSource.Internal">
            <summary>
            The UA configuration is provided internally by the component.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAConfigurationSource.AppConfig">
            <summary>
            The UA configuration is loaded from the configuration file of the executing application.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAStatusCodeException">
            <summary>
            An exception generated when the OPC-UA status code is not as expected. 
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAStatusCodeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception 
            being thrown. </param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or 
            destination. </param>
            <remarks>
            <c>GetObjectData</c> sets a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with all the exception object data targeted for 
            serialization. During deserialization, the exception is reconstituted from the <C>SerializationInfo</C> transmitted 
            over the stream.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAStatusCodeException.StatusCode">
            <summary>
            A status code that describes the result of a service or operation.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAWriteArguments">
            <summary>
            Holds all arguments needed to write into an OPC-UA server.
            </summary>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.WriteMultiple.TestSuccess.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.WriteMultiple.TestSuccess.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAWriteArguments.DefaultTypeCode">
            <summary>
            The default type that is used when writing the value.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor">
            <overloads>
            Initializes a new instance of the class.
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.OperationArguments)">
            <param name="operationArguments">Operation arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments,OpcLabs.EasyOpc.UA.UAAttributeData)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments,OpcLabs.EasyOpc.UA.UAAttributeData,System.TypeCode)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <param name="typeCode">Specifies the type that should be used when writing the value.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UAAttributeData)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UAAttributeData,System.TypeCode)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <param name="typeCode">Specifies the type that should be used when writing the value.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UAAttributeData,System.TypeCode,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <param name="typeCode">Specifies the type that should be used when writing the value.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UAAttributeData,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments,OpcLabs.EasyOpc.UA.UAAttributeData,System.TypeCode)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <param name="typeCode">Specifies the type that should be used when writing the value.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments,OpcLabs.EasyOpc.UA.UAAttributeData,System.TypeCode,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="attributeData">Value of an attribute, together with status code and timestamps, to be written.</param>
            <param name="typeCode">Specifies the type that should be used when writing the value.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAWriteArguments.#ctor(OpcLabs.EasyOpc.UA.UAWriteArguments)">
            <param name="writeArguments">Write arguments object to be copied from.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAWriteArguments.AttributeData">
            <summary>
            The value of an attribute, together with status code and timestamps.
            </summary>
            <returns>Returns the attribute data.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAWriteArguments.TypeCode">
            <summary>
            Specifies the type that should be used when writing the value.
            </summary>
            <returns>The type that should be used when writing the value.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArgumentsDictionary">
            <summary>
            A dictionary of monitored item argument objects, keyed by monitored item handle.
            </summary>
            <example>
            <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.GetMonitoredItemArgumentsDictionary.Main.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.GetMonitoredItemArgumentsDictionary.Main.vb" lang="VBNET" region="Example"/>
            </example>
            <remarks>This dictionary is returned by <see cref="M:OpcLabs.EasyOpc.UA.EasyUAClient.GetMonitoredItemArgumentsDictionary"/>.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemArgumentsDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception 
            being thrown. </param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or 
            destination. </param>
            <remarks>
            This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.ValueResult">
            <summary>Holds result of an operation in form of a generic <see cref="T:System.Object"/> value.</summary>
            <example>
            <code source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.ReadMultipleValues.Main.cs" lang="CSharp" region="Example"/>
            <code source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.ReadMultipleValues.Main.vb" lang="VBNET" region="Example"/>
            </example>
            <remarks>
            <para>The result is successful if the <see cref="P:OpcLabs.EasyOpc.UA.OperationResult.Exception"/> is a null reference. Otherwise, this 
            property contains information about the reason of the failure.</para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.ValueResult.Value">
            <summary>Gets a generic <see cref="T:System.Object"/> value that is a successful result of the operation.</summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAReadArguments">
            <summary>
            Holds all arguments needed to read from an OPC-UA server.
            </summary>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.ReadMultiple.Main.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.ReadMultiple.Main.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.ReadMultipleValues.Main.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.ReadMultipleValues.Main.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAReadArguments.CacheMaximumAge">
            <summary>
            The maximum age value that denotes reading from the cache.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAReadArguments.DefaultMaximumAge">
            <summary>
            The default maximum age.
            </summary>
            <remarks>Equal to <see cref="F:OpcLabs.EasyOpc.UA.UAReadArguments.CacheMaximumAge"/>, i.e. denotes reading from the cache.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor">
            <overloads>
            Initializes a new instance of the class.
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor(OpcLabs.EasyOpc.UA.OperationArguments)">
            <param name="operationArguments">Operation arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor(OpcLabs.EasyOpc.UA.UAAttributeArguments,System.Double)">
            <param name="attributeArguments">Attribute arguments object to be copied from.</param>
            <param name="maximumAge">Maximum age of the value to be read (in milliseconds). Use <see cref="F:OpcLabs.EasyOpc.UA.UAReadArguments.CacheMaximumAge"/> 
            to read from the cache.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor(OpcLabs.EasyOpc.UA.UAReadArguments)">
            <param name="readArguments">Read arguments object to be copied from.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor(OpcLabs.EasyOpc.UA.UAEndpointDescriptor,OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UAAttributeId,System.Double)">
            <param name="endpointDescriptor">Endpoint descriptor. Identifies the OPC-UA server.</param>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
            <param name="maximumAge">Maximum age of the value to be read (in milliseconds). Use <see cref="F:OpcLabs.EasyOpc.UA.UAReadArguments.CacheMaximumAge"/> 
            to read from the cache.</param>
            <remarks>
            <para>
            You can obtain <paramref name="nodeId"/> e.g. from by calling one of the browsing methods on 
            <see cref="T:OpcLabs.EasyOpc.UA.EasyUAClient"/> object.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAReadArguments.#ctor(OpcLabs.EasyOpc.UA.UANodeArguments,OpcLabs.EasyOpc.UA.UAAttributeId)">
            <param name="nodeArguments">An object that specifies the node in the OPC server.</param>
            <param name="attributeId">Attribute Id. Identifies an attribute of a node.</param>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAReadArguments.MaximumAge">
            <summary>
            Maximum age of the value to be read (in milliseconds). Use <see cref="F:OpcLabs.EasyOpc.UA.UAReadArguments.CacheMaximumAge"/> 
            to read from the cache.
            </summary>
            <returns>Returns the maximum age (in milliseconds).</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UANodeElementCollection">
            <summary>
            A collection of node elements, keyed by their browse names.
            </summary>
            <example>
            <code 
                source="..\..\Examples\CSharp\VS2010\Console\DocExamples\_EasyUAClient.BrowseDataNodes.Overload1.cs" 
                lang="CSharp" 
                region="Example"/>
            <code 
                source="..\..\Examples\VBNET\VS2010\Console\DocExamples\_EasyUAClient.BrowseDataNodes.Overload1.vb" 
                lang="VBNET" 
                region="Example"/>
            </example>
            <remarks>This collection is returned by the browsing methods.</remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeElementCollection.ContainsKey(OpcLabs.EasyOpc.UA.UAQualifiedName)">
            <summary>
            Determines whether a node with certain browse name is in the collection.
            </summary>
            <param name="key">The browse name to look up.</param>
            <returns><c>True</c> if the collection contains a node with the specified browse name; <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeElementCollection.GetKeyForItem(OpcLabs.EasyOpc.UA.UANodeElement)">
            <inheritdoc/>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UANodeElementCollection.Keys">
            <summary>
            A collection of browse names that are keys to the node elements in the dictionary.
            </summary>
            <returns>Returns a collection of browse names. Returns null reference if the collection has not
            been yet allocated.</returns>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UANodeClass">
            <summary>
            Represents one node class, or a combination of node classes (classes of nodes in OPC Address Space).
            </summary>
            <remarks>
            NodeClasses:<br/>
            "NodeClasses are defined in terms of the Attributes and References that shall be instantiated (given
            values) when a Node is defined in the AddressSpace."<br/>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UANodeClass.None">
            <summary>
            No node class (unspecified).
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UANodeClass.Object">
            <summary>
            The Object node class.
            </summary>
            <remarks>
            Object NodeClass:<br/>
            "Objects are used to represent systems, system components, real-world objects and software
            objects."<br/>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UANodeClass.Variable">
            <summary>
            The Variable node class.
            </summary>
            <remarks>
            Variable NodeClass:<br/>
            "Variables are used to represent values which may be simple or complex. Variables are defined by
            VariableTypes [...].<br/>
            Variables are always defined as Properties or DataVariables of other Nodes in the AddressSpace.
            They are never defined by themselves. A Variable is always part of at least one other Node, but
            may be related to any number of other Nodes. Variables are defined using the Variable NodeClass,
            [...]."<br/>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UANodeClass.Method">
            <summary>
            The Method node class.
            </summary>
            <remarks>
            Method NodeClass:<br/>
            "Methods define callable functions. Methods are invoked using the Call Service [...].
            Method invocations are not represented in the AddressSpace. Method invocations always run to
            completion and always return responses when complete. Methods are defined using the Method
            NodeClass, [...]."<br/>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UANodeClass.ObjectType">
            <summary>
            The ObjectType node class.
            </summary>
            <remarks>
            ObjectType NodeClass:<br/>
            "ObjectTypes provide definitions for Objects. ObjectTypes are defined using the ObjectType
            NodeClass [...]."<br/>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UANodeClass.VariableType">
            <summary>
            The VariableType node class.
            </summary>
            <remarks>
            VariableType NodeClass:<br/>
            "VariableTypes are used to provide type definitions for Variables. VariableTypes are defined using
            the VariableType NodeClass, [...]."<br/>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UANodeClass.ReferenceType">
            <summary>
            The ReferenceType node class.
            </summary>
            <remarks>
            ReferenceType NodeClass:<br/>
            "References are defined as instances of ReferenceType Nodes. ReferenceType Nodes are visible in
            the AddressSpace and are defined using the ReferenceType NodeClass [...]. In
            contrast, a Reference is an inherent part of a Node and no NodeClass is used to represent
            References."<br/>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UANodeClass.DataType">
            <summary>
            The DataType node class.
            </summary>
            <remarks>
            DataType NodeClass:<br/>
            "The DataType NodeClass describes the syntax of a Variable Value. The DataTypes may be simple
            or complex, depending on the DataTypeSystem. DataTypes are defined using the DataType
            NodeClass, [...]."<br/>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UANodeClass.View">
            <summary>
            The View node class.
            </summary>
            <remarks>
            View NodeClass:<br/>
            "Underlying systems are often large and clients often have an interest in only a specific subset of the
            data. They do not need, or want, to be burdened with viewing Nodes in the AddressSpace for which
            they have no interest.<br/>
            To address this problem, [the] specification defines the concept of a View. Each View defines a
            subset of the Nodes in the AddressSpace. The entire AddressSpace is the default View. Each Node
            in a View may contain only a subset of its References, as defined by the creator of the View. The
            View Node acts as the root for the Nodes in the View. Views are defined using the View NodeClass,
            [...]."<br/>
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UANodeClass.All">
            <summary>
            All node classes combined.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAAttributeId">
            <summary>
            Ids of attributes in OPC UA address space.
            </summary>
            <remarks>
            Attribute:
            <br/>
            "A primitive characteristic of a Node. All Attributes are defined by OPC UA, and may not be defined by Clients or 
            Servers. Attributes are the only elements in the AddressSpace permitted to have data values."
            </remarks>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.None">
            <summary>
            No attribute.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.AccessLevel">
            <summary>
            How a variable may be accessed.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.ArrayDimensions">
            <summary>
            The length for each dimension of an array value.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.BrowseName">
            <summary>
            A non-localized, human readable name for the node.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.ContainsNoLoops">
            <summary>
            Indicates that following forward references within a view will not cause a loop.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.DataType">
            <summary>
            The node id of the data type for the variable value.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.Description">
            <summary>
            A localized description for the node.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.DisplayName">
            <summary>
            A localized, human readable name for the node.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.EventNotifier">
            <summary>
            Indicates that the node can be used to subscribe to events.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.Executable">
            <summary>
            Whether the method can be called.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.Historizing">
            <summary>
            Specifies whether the server is actively collecting historical data for the variable.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.InverseName">
            <summary>
            The browse name for an inverse reference.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.IsAbstract">
            <summary>
            Indicates that a type node may not be instantiated.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.MinimumSamplingInterval">
            <summary>
            Specifies (in milliseconds) how fast the server can reasonably sample the value for changes.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.NodeClass">
            <summary>
            The class of the node.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.NodeId">
            <summary>
            The canonical identifier for the node.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.Symmetric">
            <summary>
            Indicates that forward and inverse references have the same meaning.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.UserAccessLevel">
            <summary>
            How a variable may be accessed after taking the user's access rights into account.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.UserExecutable">
            <summary>
            Whether the method can be called by the current user.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.UserWriteMask">
            <summary>
            Indicates which attributes are writeable by the current user.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.Value">
            <summary>
            The value of a variable.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.ValueRank">
            <summary>
            The number of dimensions in the value.
            </summary>
        </member>
        <member name="F:OpcLabs.EasyOpc.UA.UAAttributeId.WriteMask">
            <summary>
            Indicates which attributes are writeable.
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAServiceException">
            <summary>
            An exception thrown when a UA defined error occurs.
            </summary>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception 
            being thrown. </param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or 
            destination. </param>
            <remarks>
            This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAServiceException.TransformExceptionToHost(System.Exception,System.Exception@)">
            <summary>
            
            </summary>
            <param name="exception"></param>
            <param name="transformedException"></param>
            <returns>Returns true if the exception should be wrapped. Returns false if the exception should be rethrown.
            </returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UAServiceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception 
            being thrown. </param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or 
            destination. </param>
            <remarks>
            <c>GetObjectData</c> sets a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with all the exception object data targeted for 
            serialization. During deserialization, the exception is reconstituted from the <C>SerializationInfo</C> transmitted 
            over the stream.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAServiceException.Data">
            <inheritdoc/>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAServiceException.HelpLink">
            <inheritdoc/>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAServiceException.Source">
            <inheritdoc/>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAServiceException.StackTrace">
            <inheritdoc/>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAServiceException.ServiceResult">
            <summary>
            The service result (combines the status code and diagnostic information) associated with the exception.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UAServiceException.ServiceTargetSite">
            <summary>
            Gets the method that throws the originating exception.
            </summary>
            <value>The <see cref="T:System.Reflection.MethodBase"/> that threw the originating exception.</value>
            <remarks>
            <para>
            This property is introduced because the <see cref="P:System.Exception.TargetSite"/> property cannot be set or overriden.
            </para>
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:OpcLabs.EasyOpc.UA.EasyUAClient.MonitoredItemChanged"/> event.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.AttributeData">
            <summary>
            Attribute data: the value of an attribute, together with status code and timestamps.
            </summary>
            <remarks>
            This property can only be accessed if the <see cref="P:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.Exception"/> is <c>null</c>.
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.Exception">
            <summary>
            Gets the current exception. Contains null reference when no exception. 
            </summary>
            <remarks>
            <para>
            Your application code should check the Exception first, before accessing the <see cref="P:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.AttributeData"/> property.
            </para>
            </remarks>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.Arguments">
            <summary>
            Holds arguments that were used to subscribe to a monitored item in an OPC-UA server.
            </summary>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.Handle">
            <summary>
            The handle of the monitored item subscription, as returned by the method that created the subscription.
            </summary>
            <remarks>
            <para>It is not recommended that you use the handle for purposes other rather than changing the subscription
            or unsubscribing. If you need to identify the item which the incoming notification relates to, pass a State
            argument (or propert) to the subscription method, and then interpret the State property in the 
            <see cref="P:OpcLabs.EasyOpc.UA.EasyUAMonitoredItemChangedEventArgs.Arguments"/> of the notification.</para>
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UANodeId">
            <summary>
            Stores an identifier for a node in a server's address space, together with a complete namespace URI.
            </summary>
            <remarks>
            <para>
            An implicit conversion from a <see cref="T:System.String"/> containing the expanded text of Node ID exists.
            It is therefore common to specify <see cref="T:OpcLabs.EasyOpc.UA.UANodeId"/>-s as strings, relying on the implicit conversion.</para>
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeId.#ctor">
            <overloads>
            <summary>
            Initializes a new instance of the class.
            </summary>
            </overloads>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeId.#ctor(System.String)">
            <param name="expandedText">An expanded node Id text (contains namespace URI, and namespace-relative node Id).
            </param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeId.#ctor(OpcLabs.EasyOpc.UA.UANodeElement)">
            <param name="nodeElement">A node element to create node Id from.</param>
            <remarks>
            The <see cref="P:OpcLabs.EasyOpc.UA.UANodeElement.NodeId"/> will be used to create a new node Id.
            </remarks>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeId.#ctor(OpcLabs.EasyOpc.UA.UANodeId)">
            <param name="nodeId">Node Id to be copied from. Identifies the node in OPC server's address space.</param>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeId.op_Equality(OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UANodeId)">
            <summary>Determines whether the two objects are equal.</summary>
            <param name="nodeId1">First object to be compared.</param>
            <param name="nodeId2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeId.op_Inequality(OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UANodeId)">
            <summary>Determines whether the two objects are not equal.</summary>
            <param name="nodeId1">First object to be compared.</param>
            <param name="nodeId2">Second object to be compared.</param>
            <returns><c>True</c> if the objects are not equal; <c>false</c> if they are equal.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeId.op_LessThan(OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UANodeId)">
            <summary>
            Determines whether one node Id should be considered less than the second node Id for ordering purposes.
            </summary>
            <param name="value1">First object to be compared.</param>
            <param name="value2">Second object to be compared.</param>
            <returns><c>True</c> if the first value is less than the second value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeId.op_GreaterThan(OpcLabs.EasyOpc.UA.UANodeId,OpcLabs.EasyOpc.UA.UANodeId)">
            <summary>
            Determines whether one node Id should be considered greater than the second node Id for ordering purposes.
            </summary>
            <param name="value1">First object to be compared.</param>
            <param name="value2">Second object to be compared.</param>
            <returns><c>True</c> if the first value is greater than the seconds value; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeId.op_Implicit(System.String)~OpcLabs.EasyOpc.UA.UANodeId">
            <summary>
            Converts a <see cref="T:System.String"/> to a node Id.
            </summary>
            <param name="expandedText">The string to be converted.</param>
            <returns>For a non-null input, returns the node Id with the given expanded text.
            Returns a node Id with an empty expanded text if the input is <c>null</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeId.op_Implicit(OpcLabs.EasyOpc.UA.UANodeId)~System.String">
            <summary>
            Converts a node Id to a string.
            </summary>
            <param name="nodeId">Node Id. Identifies the node in OPC server's address space.</param>
            <returns>Returne the expanded node Id text.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeId.CompareTo(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeId.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current object.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeId.Equals(OpcLabs.EasyOpc.UA.UANodeId)">
            <summary>
            Determines whether the specified <see cref="T:OpcLabs.EasyOpc.UA.UANodeId"/> is equal to the current object.
            </summary>
            <param name="other">The <see cref="T:OpcLabs.EasyOpc.UA.UANodeId"/> to compare with the current object.</param>
            <returns><c>true</c> if the specified object is equal to the current object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeId.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:OpcLabs.EasyOpc.UA.UANodeId.ToString">
            <summary>
            Returns a string that represents the current node Id.
            </summary>
            <returns>Returns the expanded text of the node Id.</returns>
        </member>
        <member name="P:OpcLabs.EasyOpc.UA.UANodeId.ExpandedText">
            <summary>
            Expanded text of the node Id (also contains the namespace URI).
            </summary>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.UAClientEngineException">
            <summary>
            An exception that originates in the OPC-UA client engine and not in the OPC service (or OPC-UA SDK).
            </summary>
            <remarks>
            This is usually a "hard" exception that is not normally contained inside <see cref="T:OpcLabs.EasyOpc.UA.OpcException"/> or
            <see cref="T:OpcLabs.EasyOpc.UA.OperationResult"/> objects.
            </remarks>
        </member>
        <member name="T:OpcLabs.EasyOpc.UA.NamespaceDoc">
            <summary>
            This namespace contains classes that facilitate easy work with OPC Unified Architecture (OPC-UA).
            </summary>
        </member>
    </members>
</doc>
